/* ==UserStyle==
@name           MDN
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl(n = ) {
	background-color: n ? s('var(--hl-%s)', n) : var(--hl) $i;
	color: var(--hl-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid svar(color) $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus() {
	.page-focus & {
		--bg: var(--accent-bg);
		--fg: var(--accent-fg);
		--fg2: var(--accent-fg);
		--border: var(--accent-border);
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2)
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: 0 20px 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();
}

normalise-input() {
	bgc(2);
	padding: 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	background-image: none $i;
	padding: 0 calc(var(--pad) * 2) $i;
	brd();
	height: $input-h $i;
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header() {
	fg();
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	padding-top: calc(var(--pad) * 3) $i;
	padding-bottom: calc(var(--pad) * 1.5) $i;
	brd(bottom);
	margin-bottom: calc(var(--pad) * 1.5) $i;
}

@-moz-document domain("developer.mozilla.org") {
	// Remove elements
	// I. Homepage
	.featured-articles,
	.recent-contributions,
	.contributor-spotlight,
	.homepage section > h1,
	.homepage section > p,

	// II. etc.
	//.mandala-rotate, // rotating cpu eating bullshit
	.theme-switcher-menu,
	.auth-container,
	[href$="/plus"],
	#nav-footer
	{
		display: none $i;
	}
	.homepage {
		margin-top: var(--body-pad);
	}

	// Global
	:root {
		bg();

		// Background
		--background-primary: var(--bg) $i;
		--background-secondary: var(--bg2) $i;
		--background-tertiary: var(--bg3) $i;
		--background-toc-active: var(--background-secondary) $i;

		--background-mark-green: color-a(10) $i;
		--background-mark-yellow: color-a(11) $i;
		--background-information: color-a(12) $i;
		--background-critical: color-a(9) $i;
		--background-success: color-a(10) $i;
		--background-warning: color-a(11) $i;

		--code-background-inline: var(--bg2) $i;
		--code-background-block: var(--bg2) $i;

		// Text
		--text-primary: var(--fg) $i;
		--text-secondary: var(--fg2) $i;
		--text-link: var(--fg-link) $i;
		--text-invert: var(--bg) $i;

		--text-primary-red: var(--color9) $i;
		--text-primary-green: var(--color10) $i;
		--text-primary-blue: var(--color12) $i;
		--text-primary-yellow: var(--color11) $i;

		--code-token-tag: var(--color12) $i;
		--code-token-punctuation: var(--fg2) $i;
		--code-token-attribute-name: var(--color13) $i;
		--code-token-attribute-value: var(--color10) $i;
		--code-token-comment: var(--fg2) $i;
		--code-token-default: var(--fg) $i;
		--code-token-selector: var(--color12) $i;

		// Icons
		--icon-primary: var(--fg) $i;
		--icon-secondary: var(--fg2) $i;
		--icon-information: var(--hl) $i;
		--icon-warning: var(--color11) $i;
		--icon-critical: var(--color9) $i;
		--icon-success: var(--color10) $i;

		// etc.
		--max-width: 1280px $i;
		--top-nav-height: var(--header-h) $i;
		--base-line-height: var(--line-height) $i;
		--intermediate-line-height: var(--line-height) $i;
		--font-content-line-height: var(--line-height) $i;
		--border-primary: var(--border) $i;
		--border-secondary: var(--border) $i;
		--elem-radius: var(--border-radius) $i;
		--shadow-01: none $i;
		--shadow-02: var(--shadow-big) $i;
	}

	a:not(:hover) {
		text-decoration: none $i;
	}
	a:hover {
		text-decoration: underline $i;
	}

	// Header
	.top-navigation {
		background-color: var(--accent);
		brd(bottom);
		header-focus();

		[style="fill: var(--text-primary);"] {
			fill: var(--accent-fg) $i;
		}
	}

	// Homepage
	.mandala-container {
		bg();
	}
	.search {
		&-input-field {
			normalise-input();
			caret-color: var(--fg) $i;
			width: unset $i;

			&, &::placeholder {
				text-decoration: none $i;
			}
		}
		&-button {
			right: var(--pad) $i;
		}
	}
	.search-results {
		brd();
		mar(0);
		width: 100% $i;
		top: calc(var(--header-h) + var(--pad)) $i;

		.result-item {
			bg(-tr);
			backdrop-filter: var(--popup-filter);
			pad();
			brd(bottom);

			b > span {
				fg();
			}

			&.highlight {
				hl();

				* {
					color: var(--hl-fg) $i;
				}
			}

			mark {
				hl();
			}
		}
	}

	// Content
	.sidebar {
		pad(0);
	}
	h1, h2, h3 {
		normalise-header();
	}
	pre {
		brd();
		pad();
		margin: var(--pad)0 ;
	}
	.notecard {
		p {
			fg();
		}

		strong {
			text-transform: uppercase;
		}
	}
}
