/* ==UserStyle==
@name           4chan X
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus

@var checkbox post-full-width "Full width posts" 1
@var text post-full-width-size "Full width post size" 100%
@var text thread-margin "Thread margin" 25%
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$small-screen = 768px
$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl(n = ) {
	background-color: n ? s('var(--hl-%s)', n) : var(--hl) $i;
	color: var(--hl-fg) $i;
}

accent() {
	background-color: var(--accent) $i;
	color: var(--accent-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	color = (typeof(color) == 'ident' || typeof(color) == 'string') ? \
		svar(color) : color

	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid color $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus() {
	.page-focus & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--fg2: var(--accent-fg);
		--border: var(--accent-border);
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2);
	line-height: var(--line-height) $i;
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: 0 20px 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();
}

normalise-input() {
	bgc(2);
	line-height: var(--line-height) $i;
	padding: 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	line-height: var(--line-height) $i;
	background-image: none $i;
	padding: 0 calc(var(--pad) * 2) $i;
	brd();
	height: $input-h $i;
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			line-height: var(--line-height) $i;
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header() {
	fg();
	line-height: var(--line-height) $i;
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	pad(0);
	padding-top: calc(var(--pad) * 3) $i;
	padding-bottom: calc(var(--pad) * 1.5) $i;
	brd(bottom);
	mar(0);
	margin-bottom: calc(var(--pad) * 1.5) $i;
}

@-moz-document domain("4chan.org"), domain("4channel.org"), domain("lainchan.org") {
	:root {
		settings = \
			'post-full-width-size', \
			'thread-margin'

		for i in settings {
			\-\-{i}: convert(i);
		}

		--thread-border: 1px;
	}

	// Remove elements
	#op, .navLinks, .navLinks + hr, .thread + hr, // Navigation links
	#fourchanx-settings .reset,
	#thread-watcher .refresh
	.watch-thread-link,
	.replacedSideArrows,
	#shortcut-native,
	.bottomCtrl,

	// Quick reply
	#qr-spoiler-label,
	#qr-oekaki-button,
	#shortcut-qr
	{
		display: none $i;
	}

	// Header
	.fixed.top-header body {
		padding-top: calc(var(--header-h) + var(--body-pad));
	}
	#header-bar {
		bgc(2);
		header-focus();
		padding: 0 var(--pad) $i;
		border: none $i;
		brd(bottom);
		border-radius: 0 $i;
		box-shadow: none $i;
		center();
		justify-content: space-between;
		min-height: var(--header-h);
	}
	#board-list a,
	#shortcuts a:not(.entry) {
		pad(0);

		&:hover {
			text-decoration: underline;
		}
	}
	.brackets-wrap {
		&::before { content: ''; }
		&::after { content: var(--delim); }
	}
	.shortcut {
		mar(left, 0);

		& > a {
			fg();
		}
	}
	#shortcut {
		&-menu::after {
			content: '';
		}
		&-watcher::after,
		&-settings::after {
			content: ' ';
		}
	}
	@media (min-width: $small-screen) {
		#update-timer:not(.empty)::after {
			content: ' seconds';
		}
		#post-count::after {
			content: ' posts';
		}
		#file-count::after {
			content: ' files';
		}
		#ip-count::after {
			content: ' IPs';
		}
		#page-count:not(.warning)::before {
			content: 'Page ';
		}
	}

	// Notifications
	colors = {
		error: 1,
		success: 2,
		warning: 3,
		info: 4
	}
	for k, v in colors {
		.notification.{k} {
			background-color: color-a(v);
			border-color: color-a(v) $i;
		}
	}
	.fixed.top-header:not(.gallery-open) #notifications {
		top: calc(100% + var(--border-width)) $i;
	}
	.notification {
		backdrop-filter: var(--popup-filter);
		fg();
		text-shadow: none;
		brd();
		border-radius: 0 0 var(--border-radius) var(--border-radius) $i;
		border-top: none $i;
		margin: 0 auto;
		shd(mid);
		anim();

		.close {
			display: none;
		}
	}
	.message {
		pad();
	}

	// Catalog
	.catalog {
		// Original
		.thread {
			&.filter-highlight {
				border-color: var(--hl) $i;
				box-shadow: none $i;
			}

			& > a {
				display: flex;
			}
		}

		// JSON index
		&-thread {
			border: none;
			margin: 0 var(--pad) $i;
		}
		&-thumb {
			box-shadow: none;
			border-radius: var(--border-radius);
		}
		&-stats {
			pad(top, 0);
			brd(top);
		}
	}

	// Posts
	.backlink {
		clr(11);

		&:first-child {
			padding-left: 1ch;
		}
		&:hover {
			clr(3);
		}
	}
	.backlink.deadlink:not(.forwardlink),
	.quotelink.deadlink:not(.forwardlink) {
		text-decoration: none $i;
	}
	.post {
		&.op {
			overflow: hidden $i;
		}

		.inline & {
			pad(0);
			mar(0);
			border: none;

			.threadContainer & {
				mar(left, 0);
			}
		}

		.threadContainer & {
			mar(left);

			@media (max-width: $small-screen) {
				width: calc(100% - var(--pad));
			}
		}

		if (post-full-width) {
			width: var(--post-full-width-size) $i;

			.threadContainer & {
				width: calc(var(--post-full-width-size) - var(--pad)) $i;
			}
		}
	}
	if (thread-margin > 0) {
		.thread {
			margin-left: var(--thread-margin) $i;
			margin-right: var(--thread-margin) $i;
		}
	}
	:root.fourchan-x.highlight-you {
		.yourPost {
			& > .reply,
			&.opContainer {
				brd(left, color5);
			}
		}
		.quotesYou > .reply {
			brd(left, color3);
		}
	}
	#qp {
		border: none $i;

		.post {
			mar(0);
		}
	}
	.inline {
		brd();
		mar(0);
		mar(top);
	}
	.qphl {
		outline: none;
		border-color: var(--hl) $i;
	}
	#unread-line {
		position: relative;
		border: 0 !important;
		text-align: center;
		height: auto;

		&::before {
			content: '';
			position: absolute;
			left: 0;
			top: 50%;
			box(100%, var(--border-width));
			background-color: color(1);
		}
		&::after {
			content: 'NEW POSTS';
			position: relative;
			display: inline-block;
			bg();
			clr(9);
			lnh();
			pad();
		}
	}
	.forwardlink {
		clr(4);

		&:hover {
			clr(12);
		}
	}

	.threadContainer {
		border-left: var(--thread-border) solid var(--border);
		mar(left);
	}

	// Icons to text
	.menu-button .fa,
	.close {
		&::before {
			font: var(--font-size) var(--font-normal);
		}
		&:hover::before {
			text-decoration: underline;
		}
	}
	.menu-button .fa::before {
		content: 'Menu';
	}
	.close::before {
		content: 'Close';
	}

	// Menu
	.post:not(.op) .postInfo {
		position: relative;

		&:hover .menu-button {
			right: 16px;
			dropfade();
		}
		.menu-button {
			position: absolute !important;
			right: -100%;
			top: 0;
			bottom: 0;
			box(unset);
			bgc();
			pad();
			brd(left);

			&:hover {
				fg();
			}
			.fa:hover::before {
				text-decoration: none;
			}
		}
	}

	// Popup
	#overlay {
		background-color: transparent;
	}
	.dialog {
		bgc(-tr);
		brd(,accent-border);
		shd(big);
	}
	.section {
		&-container {
			bg();
			pad();
			border-radius: 0 0 var(--border-radius) var(--border-radius) $i;
		}
		&-advanced {
			li {
				pad(0);

				&::before {
					content: ' -\00a0';
				}
			}

			.note {
				font-style: normal;
				mar(left, 0);

				&::before {
					content: 'NOTE:\00a0'
				}
			}
		}
	}
	#qr, #thread-watcher {
		& > .move {
			accent();
			padding: 0 var(--pad);
			brd(bottom, accent-border);
			border-radius: var(--border-radius) var(--border-radius) 0 0 $i;
			height: var(--header-h);
			center();
			justify-content: space-between;
		}
		.close {
			replace-text();
			pad(0);
			order: 1;
			position: unset $i;
			box-sizing: border-box;
			background-image: s("url('data:image/svg+xml,%s')", unquote('<svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="8" height="8" viewBox="0 0 8 8"><style> rect { width: 1px; height: 1px; } </style><rect x="1" y="1"/><rect x="2" y="2"/><rect x="5" y="2"/><rect x="6" y="1"/><rect x="3" y="3"/><rect x="4" y="3"/><rect x="3" y="4"/><rect x="4" y="4"/><rect x="2" y="5"/><rect x="1" y="6"/><rect x="5" y="5"/><rect x="6" y="6"/></svg>'));
			background-repeat: no-repeat;
			background-position: center;
			padding-left: var(--icon-size);
			border-radius: var(--border-radius);
			box(calc(var(--icon-size) * 2));

			@media (prefers-color-scheme: dark) {
				filter: invert(); // TODO
			}

			&:hover {
				background-color: var(--hl);
			}
		}
	}

	#qr {
		pad(0);

		& > .move > label {
			display: inline-flex $i;
		}
		input[type="checkbox"] {
			top: 0 $i;
		}
		select {
			position: absolute;
			right: calc(var(--icon-size) + var(--pad) * 2);
		}

		& > form {
			pad();
		}
		.persona, .textarea {
			mar(bottom);
		}
		input[placeholder="Name"] {
			mar(right);
		}

		&-filename {
			input& {
				brd();
				focus();
				box-sizing: border-box;
			}

			&-container {
				padding: 0 var(--pad);

				& > a {
					//replace-text(attr(title));
					mar(right, 0);

					&:not(:last-of-type) {
						margin-right: 1ch $i;
					}
				}
			}
		}
		&-no-file, .has-file &-filename {
			pad(0);
		}
		&-no-file {
			replace-text('None', fg2);
		}
	}
	.qr-link {
		normalise-button();
		center();
		background-image: none $i;
		position: absolute;
		top: var(--thread-button-pos);
		right: 0;
		top: 0;
		box-sizing: border-box;

		.is_catalog & {
			left: calc(7ch + 7px + var(--pad));
			right: unset;
		}

		&:hover {
			fg();
			text-decoration: none;
		}

		&-container {
			mar(0);
			position: relative;
		}
	}
	#file-n-submit {
		height: unset;
		mar(top, 0);

		& > input {
			width: unset $i;
		}
	}
	.captcha-img, .field {
		background-color: unset;
		border: none;
	}

	#menu, .submenu {
		pad(0);

		&, a {
			fg();
			text-decoration: none;
		}

		.entry {
			pad();

			&:not(.disabled).focused {
				hl();
			}
			&.disabled {
				background-color: transparent $i;
			}

			input[type="checkbox"] {
				top: 0;
			}
		}
	}

	#fourchanx-settings {
		pad(0);
		shd(big);

		& > nav {
			accent();
			brd(bottom, accent-border);
			border-radius: var(--border-radius) var(--border-radius) 0 0;
			pad();

			.sections-list, .credits {
				replace-text(,accent-fg);

				a:not(:last-child)::after {
					content: '|';
					display: inline-block;
					margin: 0 1ch;
				}
			}

			a:not(:hover) {
				text-decoration: none;
			}
		}

		fieldset {
			pad();
			brd();
			mar(0);

			& + & {
				mar(top);
			}
		}
		label {
			text-decoration: none;
			margin-top: calc(var(--pad) / 2);
		}
		fieldset > div:first-of-type label {
			margin-top: 0;
		}
		.section-main div::before {
			border-color: var(--border);
		}
		.suboption-list {
			&::before {
				top: calc(var(--font-size) * -2);
			}

			& > div:last-of-type {
				bg();
			}
		}

		code {
			bgc(2);
			brd();
		}

		// Hide ": "
		.description {
			fg(2);
			margin-left: s('calc(%s - 1ch)', $select-size);
			position: relative;

			&::before {
				content: '';
				position: absolute;
				top: 2px; // TODO
				box(1ch, var(--font-size));
				bg();
			}
		}
	}

	#thread-watcher {
		bg();
		pad(0);
	}
	#watched-threads {
		pad();

		.replies-unread {
			pad(0);

			.fa {
				display: none;
			}
		}
		.watcher {
			&-link:hover {
				text-decoration: underline;
			}
			&-page, &-unread {
				margin-right: 1ch;
			}
			&-title:not(:first-child) {
				margin-left: 0;
			}
		}
	}

	// etc.
	#navlinks {
		top: unset;
		bottom: var(--body-pad);
		right: var(--body-pad);
	}
	.warning {
		clr(9);
	}
	.new {
		clr(10);
	}
}
