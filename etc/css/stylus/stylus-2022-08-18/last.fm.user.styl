/* ==UserStyle==
@name           Last.fm
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$small-screen = 768px
$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr || n == -tr2 || n == -tr3) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl(n = ) {
	background-color: n ? s('var(--hl-%s)', n) : var(--hl) $i;
	color: var(--hl-fg) $i;
}

accent() {
	background-color: var(--accent) $i;
	color: var(--accent-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	color = (typeof(color) == 'ident' || typeof(color) == 'string') ? \
		svar(color) : color

	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid color $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus(class = page-focus) {
	.{class} & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--fg2: var(--accent-fg);
		--border: var(--accent-border);
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2);
	line-height: var(--line-height) $i;
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: var(--pad) 20px var(--pad) var(--pad) $i;
	brd();
	focus();
}

normalise-input() {
	bgc(2);
	line-height: var(--line-height) $i;
	padding: var(--pad) $i;
	brd();
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	line-height: var(--line-height) $i;
	background-image: none $i;
	padding: var(--pad) calc(var(--pad) * 2) $i;
	brd();
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			line-height: var(--line-height) $i;
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header(first = true) {
	fg();
	line-height: var(--line-height) $i;
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	pad(0);
	if (!first) {
		padding-top: calc(var(--pad) * 2) $i;
	}
	padding-bottom: var(--pad) $i;
	brd(bottom);
	mar(0);
	margin-bottom: var(--pad) $i;
}


@-moz-document domain("last.fm") {
	// Hide elements
	.trending-tracks-section-wrapper, .trending-tracks-section-wrapper + .container, // Trending tracks & features (festivals?)
	.site-auth--anon, [href="/join"], .shouting-unavailable, // Not logged in
	.shout-more-actions,
	.footer
	{
		display: none $i;
	}

	// Global
	body {
		bgc();
		line-height: var(--line-height);
	}
	a {
		color: var(--fg-link);

		&:hover {
			text-decoration: underline;
		}
	}
	.main-content,
	.container,
	.header {
		bg();
	}
	.btn-primary {
		normalise-button();
		bg();
		letter-spacing: unset;
		text-transform: unset;
		mar(0);
		min-height: unset;
	}
	.inplace-field {
		normalise-input();
		bg();
	}

	// Header
	/*.top-bar {
		bgc(2);
		header-focus();
		brd(bottom);
	}
	.player-bar {
		bgc(2);
	}
	.top-bar,
	.player-bar {
		height: var(--header-h);
	}
	.masthead {
		&-logo {
			display: none;
		}
		&-inner-wrap {
			pad(0);
		}
	}*/
	.header-new {
		margin-bottom: var(--body-pad);

		&-content {
			pad(left, 0);
		}
		&-title {
			letter-spacing: unset;
		}
	}
	.secondary-nav-item {
		mar(0);

		&-link {
			fg(2);
			opacity: unset $i;
			pad();
			mar(0);

			&:hover {
				fg();
			}

			&--active {
				hl();

				&::after {
					display: none;
				}
			}
		}
	}
	.main-content {
		padding-top: var(--header-h);
	}

	// Content
	.page-content {
		bg(2);
		pad();
		brd();
		border-bottom: none $i;
	}
	.section-with-separator {
		pad(bottom, 0);
		mar(top, 0);

		&::after {
			display: none;
		}
	}

	section > h2,
	section > h3
	.section-controls {
		normalise-header();
		width: 100%;
	}
	.inline-section-control {
		margin-left: auto;
		margin-right: 0;
	}
	.subpage-title {
		letter-spacing: unset;
	}
	.text-18, .subpage-title {
		line-height: var(--line-height);
	}

	.shout {
		pad(bottom);
		brd(bottom);

		&-container {
			pad(top);
		}
		&box,
		&-list-item {
			mar(top);
		}
		&-form {
			pad(bottom);
			border-bottom: none;
		}
		&-form + &-list {
			brd(top);
			mar(top, 0);
		}
		&-user {
			mar(bottom);

			a {
				fg();
			}
		}
		&-timestamp {
			fg(2);
		}
		&-action {
			fg();
			line-height: var(--line-height);

			&s {
				mar(0);
			}
		}
		&--deleted {
			bg();
			pad();
			brd();
			mar(0);
		}
	}
	.catalogue-overview-similar-artists-full-width {
		mar(top);
		margin-left: calc(var(--pad) * -1) $i;
		margin-right: calc(var(--pad) * -1) $i;

		&-item {
			&-wrap {
				pad(left);
				pad(right);
			}
			&-name {
				line-height: var(--line-height);
				mar(top);
			}
			&-aux-text, &-regular-tags {
				fg(2);
				line-height: var(--line-height);
				mar(top, 0);
			}
		}
	}
}
