/* ==UserStyle==
@name					 	4chan
@namespace			github.com/openstyles/stylus
@version				1.0.0
@description		A new userstyle
@author				 	Me

@preprocessor stylus

@var checkbox board-title-image "Board title image" 0
@var text board-title-font-size "Board title font size" 18pt
@var text board-title-pad "Board title padding multiply" 4

@var checkbox right-side-images "Images on right side" 1
@var text arrow-size "Arrow size (on error)" 8px
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$small-screen = 768px
$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr || n == -tr2 || n == -tr3) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl(n = ) {
	background-color: n ? s('var(--hl-%s)', n) : var(--hl) $i;
	color: var(--hl-fg) $i;
}

accent() {
	background-color: var(--accent) $i;
	color: var(--accent-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	color = (typeof(color) == 'ident' || typeof(color) == 'string') ? \
		svar(color) : color

	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid color $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus(class = page-focus) {
	.{class} & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--fg2: var(--accent-fg);
		--border: var(--accent-border);
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2);
	line-height: var(--line-height) $i;
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: 0 20px 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();
}

normalise-input() {
	bgc(2);
	line-height: var(--line-height) $i;
	padding: 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	line-height: var(--line-height) $i;
	background-image: none $i;
	padding: 0 calc(var(--pad) * 2) $i;
	brd();
	height: $input-h $i;
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			line-height: var(--line-height) $i;
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header(first = false) {
	fg();
	line-height: var(--line-height) $i;
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	pad(0);
	if (!first) {
		padding-top: calc(var(--pad) * 2) $i;
	}
	padding-bottom: var(--pad) $i;
	brd(bottom);
	mar(0);
	margin-bottom: var(--pad) $i;
}

@-moz-document domain("4chan.org"), domain("4channel.org") {
	/* Variables */
	:root {
		settings = \
			'arrow-size',
			'board-title-font-size',
			'board-title-pad'

		for i in settings {
			\-\-{i}: convert(i);
		}

		--header-size: calc(var(--font-size) * var(--line-height) + var(--pad) + var(--pad) * var(--line-height) + var(--border-width));
		--board-title-height: board-title-image ? calc(var(--board-title-font-size) + var(--pad) * var(--board-title-pad) * 2 + var(--body-pad)) : var(--header-size);
		--thread-button-pos: board-title-image ? calc(var(--body-pad) - 4px) : -2px; // 4chan X
	}
	.is_catalog {
		--thread-button-pos: var(--body-pad);
	}

	/* Remove elements */
	// I. IDK
	.adc-resp-bg,
	#js-snowfield,
	#tooltip,

	// II. Buttons
	#t-help,
	.open-qr-wrap,
	[accesskey="a"],
	#settings > .btn-wrap,

	// III. Top
	#toggleMsgBtn, #globalMessage, .middlead + hr, form + hr,
	.abovePostForm, .aboveMidAd,
	#togglePostFormLink,
	#bannerCnt,
	.middlead,
	#blotter,

	// IV. Bottom
	#boardNavDesktopFoot,
	#bottomReportBtn,
	#styleSwitcher,
	.stylechanger,
	#absbot,

	// V. Post
	.sideArrows,
	.postMenuBtn,
	.postInfo > input
	{
		display: none $i;
	}

	// Global
	body {
		background: none var(--bg);
		fg();
		line-height: var(--line-height);
		padding: var(--body-pad);
		mar(0);
	}

	hr {
		brd(top);
		margin: var(--pad) 0;
	}

	a, a:visited, .button {
		&, &:hover {
			color: var(--fg-link) $i;
		}

		&:hover {
			text-decoration: underline;
		}
	}

	input {
		&:not([type]),
		&[type="text"],
		&[type="number"],
		&[type="search"] {
			normalise-input();
		}
		&[type="checkbox"] {
			normalise-checkbox();
		}
		&[type="submit"],
		&[type="button"],
		/button {
			normalise-button();
		}
		&[type="file"]::file-selector-button {
			normalise-button();
			font: var(--font-size) var(--font-normal);
			mar(right);
		}

		// Tomorrow theme fix
		&[type="checkbox"],
		&[type="submit"],
		&[type="file"],
		/button {
			filter: none;
		}
	}
	textarea {
		bgc(2);
		pad();
		brd();
		focus();
		min-width: 100%;
	}
	select {
		normalise-select();
	}
	.navLinks label {
		gap: .5ch $i;
		replace-text('Auto-update');
	}

	// Board title
	if (board-title-image) {
		images = {
			a: "https://i.imgur.com/5zmzyc4.jpg",
			c: "https://i.imgur.com/4c5m2KO.jpg",
			ck: "https://i.imgur.com/hJ7lLp2.jpg",
			e: "https://i.imgur.com/5pjIJyp.jpg",
			g: "https://i.imgur.com/tpkZt1F.jpg",
			gif: "https://i.imgur.com/8f3meO8.jpg",
			h: "https://i.imgur.com/eHfO884.jpg",
			ic: "https://i.imgur.com/Kx1Yf6j.jpg",
			jp: "https://i.imgur.com/6S4B00D.jpg",
			toy: "https://imgur.com/hJvjWm7.jpg",
			v: "https://i.imgur.com/6FTuSYF.png",
			vg: "https://i.imgur.com/W9t9RYg.jpg",
			vp: "https://i.imgur.com/0vXqiaD.jpg",
			w: "https://i.imgur.com/GNmXbof.jpg",
			wg: "https://i.imgur.com/avTTwET.jpg",
			wsg: "https://i.imgur.com/RNeZ7PR.jpg"
		}
		.boardTitle {
			background-image: url('https://i.imgur.com/BZIzz1k.jpg');
		}
		for k, v in images {
			.board_{k} .boardTitle {
				background-image: url(v);
			}
		}
		.boardTitle {
			--font-size: var(--board-title-font-size);
			background-position: center 20%;
			background-repeat: no-repeat;
			background-size: cover;
			color: #fff $i;
			text-shadow: 2px 2px #000;
			letter-spacing: 1px $i;
			line-height: 1;
			text-transform: uppercase;
			font-weight: unset $i;
			padding-bottom: calc(var(--pad) * var(--board-title-pad));
			padding-top: calc(var(--pad) * var(--board-title-pad));
			position: relative;
		}
	} else {
		.board {
			&Banner {
				text-align: unset $i;
			}
			&Title {
				normalise-header(true);
			}
		}
	}
	.op > .postInfo {
		position: unset;
	}
	#ctrl {
		margin-top: var(--body-pad);
		margin-bottom: calc(var(--pad) * 2 + var(--border-width));

		// hack, so the height doesn't get smaller
		@media (max-width: $small-screen) {
			#settings {
				visibility: hidden;
				letter-spacing: -9999px;
			}
		}

		&::before {
			content: 'Catalog';
			normalise-header();
			position: absolute;
			width: calc(100% - var(--body-pad) * 2);
		}
	}
	hr {
		display: none;
	}
	.thread .post.op .subject {
		normalise-header(true);
		position: absolute;
		left: var(--body-pad);
		right: var(--body-pad);
		top: calc(var(--header-h) + var(--body-pad) + var(--board-title-height));

		&:empty::before {
			content: 'No subject';
		}
	}
	.thread {
		margin-top: calc(var(--body-pad) + var(--header-size)) $i;
	}
	.closed {
		clr(1);
		font-weight: unset $i;
		text-transform: uppercase;
		pad(0);
		position: absolute;
		right: var(--body-pad);
		top: calc(var(--header-h) + var(--body-pad) + var(--board-title-height));

		br {
			content: '';
		}
	}

	#boardNavDesktop {
		accent();
		pad();
		margin: calc(var(--body-pad) * -1) calc(var(--body-pad) * -1) 0 calc(var(--body-pad) * -1);
		brd(bottom, accent-border);

		a {
			pad(0);
		}
	}

	#togglePostFormLink {
		display: flex;
		color: transparent;
		font-weight: unset;
		margin-bottom: calc(var(--pad) * 2);

		a {
			normalise-button();
			margin: auto;
			center();

			&:hover {
				text-decoration: none;
			}
		}
	}

	#ctrl,
	.navLinks {
		center();
	}
	#ctrl {
		justify-content: space-between;

		& > .clear {
			display: none;
		}
	}
	.navLinks {
		replace-text();

		& > [data-cmd="update"],
		& > [href="#bottom"], & > [href="#top"] {
			&::before {
				content: var(--delim);
				display: inline-block;
				white-space: pre-wrap;
				fg();
			}
		}
		& > label {
			margin-left: 1ch;
		}

		& > span:not([class]):not([id]):not(:empty) {
			position: relative;

			&::before { content: '\00a0('; }
			&::after { content: ')'; }
		}
	}
	#info .btn-wrap::after {
		content: ']\00a0'
	}
	.open-qr-wrap {
		color: transparent $i;
	}
	.tu-error {
		/*&::before {
			content: '';
			position: absolute;
			right: 0;
			box(8ch, var(--font-size));
			bg();
		}*/

		&::after {
			content: ')';
			fg();
		}
	}
	.thread-stats {
		display: initial;
		position: absolute;
		right: var(--body-pad);
		margin: 0;

		& > ::before {
			content: attr(data-tip)': ';
		}
	}

	.bottomCtrl {
		margin: calc(var(--body-pad) - 2px) 0;
		float: none;
	}
	.deleteform {
		width: calc(100% - var(--body-pad) * 2 - var(--pad) * 3 - var(--border-width) * 2 - 6ch);
		display: inline-flex;
		align-items: center;
		justify-content: end;
		replace-text();

		&::before {
			content: 'Delete post:\00a0';
			fg();
			letter-spacing: 0;
		}

		&::after {
			content: '\00a0 File only';
			letter-spacing: 0;
			fg();
		}

		input[type="submit"] {
			position: absolute;
			right: var(--body-pad);
		}
	}

	// Floating windows
	#quickReply {
		bg();
		pad(0);
		brd(, accent-border);
		shd(big);
	}

	#twHeader {
		bg(2);
		font-weight: unset;
		padding: var(--pad) 0;
		brd(bottom,, false);
		border-radius: var(--border-radius) var(--border-radius) 0 0;
		height: unset;
	}
	#watchList li {
		padding: 0 var(--pad);

		&:first-child {
			border: none $i;
			pad(top, 0);
			mar(0);
		}
	}

	#quickReply {
		input[type="text"], textarea {
			mar(bottom);
			transition-property: border-color $i;
		}
		input[type="submit"] {
			width: unset;
		}
	}
	#qr {
		&Form {
			pad();
			position: relative;

			& > :last-child {
				overflow: hidden;
			}
		}
		&Header {
			background-color: var(--accent) $i;
			font-weight: unset;
			padding: var(--pad) 0;
			brd(bottom, accent-border);
			border-radius: var(--border-radius) var(--border-radius) 0 0;
			height: unset;
			line-height: unset;
			replace-text('Reply to thread #', fg, before)
		}
		&Tid {
			fg();
			letter-spacing: 0;
		}
		&Close {
			position: absolute;
			top: var(--pad);
			right: var(--pad);
			box-sizing: border-box;
			background-image: s("url('data:image/svg+xml,%s')", unquote('<svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="8" height="8" viewBox="0 0 8 8"><style> rect { width: 1px; height: 1px; } </style><rect x="1" y="1"/><rect x="2" y="2"/><rect x="5" y="2"/><rect x="6" y="1"/><rect x="3" y="3"/><rect x="4" y="3"/><rect x="3" y="4"/><rect x="4" y="4"/><rect x="2" y="5"/><rect x="1" y="6"/><rect x="5" y="5"/><rect x="6" y="6"/></svg>'));
			background-repeat: no-repeat;
			background-position: center;
			padding-left: var(--icon-size);
			border-radius: var(--border-radius);
			box(var(--icon-size));

			&:hover {
				background-color: var(--accent-border);
			}
		}
		&CaptchaContainer {
			background-color: unset $i;
			mar(bottom);
		}
		&File {
			width: unset;
			cursor: pointer;
			position: absolute;
			bottom: var(--pad);
		}
		&Error {
			hl(error);
			text-shadow: none;
			pad();
			border-radius: var(--border-radius);
			shd(big);
			margin-top: calc(var(--arrow-size) + var(--pad));
			position: absolute;
			left: 0;
			right: 0;
			width: auto;

			br {
				display: none;
			}

			&::before {
				content: '';
				position: absolute;
				display: inline-block;
				top: calc(var(--arrow-size) * -2);
				right: calc((4ch + var(--pad) * 4) / 2);
				border: var(--arrow-size) solid transparent;
				border-bottom: var(--arrow-size) solid var(--hl-error);
			}
		}
	}
	#t {
		&-load {
			mar(right);
			width: unset $i;
		}
		&-resp {
			text-transform: unset $i;
			padding: 0 var(--pad) $i;
			width: 24ch $i;
		}
		&-cnt {
			mar(0);
			mar(top);
		}
	}

	// Name and options in the same line
	input[placeholder="Name"], #qrEmail {
		width: calc(50% - var(--pad)) $i;
		box-sizing: border-box;
	}
	#qrEmail {
		position: absolute;
		top: var(--pad);
		right: var(--pad);
	}

	// Panel
	.panel {
		bg();
		pad(0);
		brd();
		shd(big);

		&Header {
			brd(bottom);
			mar(0);
			padding: var(--pad) 0;
			line-height: unset;
		}
	}

	// Catalog
	#threads {
		pad(0);
	}
	.is_catalog .thread {
		bg(3);
		pad(0);
		brd();
		mar(top, 0);
		mar(right);
		mar(bottom);
		display: inline-flex;
		flex-direction: column;

		a {
			brd(bottom);
		}
		.thumb {
			box-shadow: none;
			display: block;
		}
	}
	.meta {
		bg(4);
		padding: calc(var(--pad) / 2) 0;
		brd(bottom);
		mar(0);
		line-height: normal;
		order: -1;

		& > i {
			clr(1);
			font-style: normal;
		}
	}
	.teaser {
		bg(2);
		pad();

		b {
			fg(2);
		}
	}

	// Posts
	.subject {
		fg();
		font-weight: unset $i;
	}

	.newPostsMarker:not(#quote-preview) {
		box-shadow: 0 4px var(--color1) $i;
	}

	#quote-preview {
		shd(big);
	}
	.media-embed {
		mar(top);

		iframe {
			border-radius: var(--border-radius);
		}
	}

	#quote-preview .postNum a,
	#delform .postNum a {
		&[title="Link to this post"] {
			color: transparent $i;
			replace-text('#', fg2);

			&:hover::after {
				fg();
			}
		}

		&[title="Reply to this post"] {
			fg(2);

			&:hover {
				fg();
			}
		}
	}

	.post {
		bg(3);
		brd();
		margin: var(--pad) 0 $i;
		pad(0);

		@media (max-width: $small-screen) {
			&:not(.preview) {
				width: 100%;
			}
		}

		&.op {
			display: block $i;
		}

		& + br {
			display: contents;
		}

		&:target, &.highlight {
			bg(3);
			border-color: var(--hl) $i;
		}
		&:target {
			box-shadow: var(--shadow-ins) var(--hl);
		}

		&.preview {
			&.op.inlined {
				bg();
			}

			&:not(.inlined) {
				mar(top, 0);
			}
		}

		&:not(.preview), &.highlight {
			anim();
		}

		.postInfo {
			bg(2);
			pad();
			brd(bottom);
		}
		&.op .postInfo {
			background-color: transparent $i;
			pad(bottom, 0);
			border-bottom: none $i;
		}
		.backlink {
			font-size: var(--font-size) $i;
		}

		blockquote {
			mar(0);
			pad();

			&:empty {
				display: none $i;
			}

			.reply {
				&:first-child {
					mar(top, 0);
				}
				a + ^[1..-1] {
					mar(bottom, 0);
				}
			}
		}
	}
	.file {
		a:not(:hover) {
			text-decoration: none;
		}

		&Text {
			mar();
			mar(bottom, 0);
		}
		&Thumb {
			mar();

			img {
				border-radius: var(--border-radius);
			}
		}

		if (right-side-images) {
			position: relative;

			&Thumb {
				float: right $i;
			}
			&Text {
				bg(-tr2);
				brd(bottom);
				max-width: unset;
				display: none;
				position: absolute;
				left: 0;
				right: 0;
				pad();
				mar(0);
				dropfade();

				.postInfo:hover + .file > &,
				&:hover {
					display: unset;
				}
			}
		}
	}

	.quote {
		clr(2);
	}
	.deadlink,
	.quoteLink,
	.quotelink {
		clr(3);
		text-decoration: none $i;

		a&:hover {
			clr(11);
		}
	}
	.dotted,
	.ql-tracked {
		clr(4);
		border-bottom: none;

		a&:hover {
			clr(12);
		}
	}
	.name {
		clr(5);
		font-weight: unset $i;
	}
	.postertrip {
		clr(1);
	}

	// Syntax highlighting
	.prettyprint {
		bg();
		font-family: var(--font-code) $i;
		pad();
		brd();
		display: block;
		resize: horizontal;

		&:last-child {
			mar(bottom, 0);
		}
	}
	pre + br {
		display: none;
	}
	.prettyprint {
		margin: var(--pad) 0;
	}

	.pun,
	.com {
		fg(2);
	}
	.fun,
	.kwd {
		clr(9);
	}
	.str,
	.atv {
		clr(10);
	}
	.opn,
	.clo {
		clr(11);
	}
	.typ,
	.atn,
	.dec,
	.var {
		clr(12);
	}
	.tag,
	.lit {
		clr(13);
	}
	.pln {
		clr(14);
	}
}
