/* ==UserStyle==
@name           Stylus
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus

@var checkbox show-styles "Show style count" 1
@var checkbox show-whitespace "Show tabs" 1
==/UserStyle== */
/* ==UserStyle==
@name           ! Functions
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, alpha, bright = true) {
	s = bright ? -2 : null;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), %s)', n, s, s, alpha);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl() {
	background-color: var(--hl) $i;
	color: var(--hl-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid svar(color) $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2)
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: 0 20px 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();
}

normalise-input() {
	bgc(2);
	padding: 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	padding: 0 calc(var(--pad) * 2) $i;
	brd();
	height: $input-h $i;
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header() {
	fg();
	text-transform: uppercase $i;
	letter-spacing: 0.4pt $i;
	padding-top: calc(var(--pad) * 3) $i;
	padding-bottom: calc(var(--pad) * 1.5) $i;
	brd(bottom);
	margin-bottom: calc(var(--pad) * 1.5) $i;
}

@-moz-document domain("stylus-lang.com") {
	// Hide elements
	header, // Logo
	main h1,
	main > a, // GitHub
	aside > :not(nav), // Credits / footer
	aside::-webkit-scrollbar {
		display: none $i;
	}
	main {
		pad(top, 0);
	}

	// Content
	html {
		bgc();
		line-height: var(--line-height);
	}

	a {
		color: var(--fg-link);
		text-decoration: none;

		&:hover {
			text-decoration: underline;
		}
	}

	h1, h2, h3, h4, h5, h6 {
		color: var(--hl);
	}

	main {
		pad();
	}

	p {
		mar(bottom);
	}

	.permalink {
		color: transparent;
		border: none;
		margin: 0;
		position: absolute;
		width: calc(100% - var(--body-pad));
	}

	pre, code {
		bg(2);
		brd();
		mar(bottom);
	}
	pre {
		pad();

		.highlighter-rouge:last-child & {
			mar(bottom, 0);
		}

		code {
			border: none $i;
		}
	}

	// Sidebar
	.sidebar {
		background-color: var(--accent);
		pad(0);
		border-bottom: none;
		flex: none;
		order: 1;

		nav {
			text-transform: unset;
			letter-spacing: 0;
			brd(right, accent-border);
			mar(bottom, 0);

			& > a, & > strong {
				fg();
				pad();
				border: none;
			}

			& > :not(:first-child) {
				brd(top, accent-border);
			}
			& > :first-child {
				border-top: none $i;
			}

			& > a:hover {
				hl();
			}

			& > strong {
				bg();
				position: relative;

				&::after {
					content: '';
					position: absolute;
					top: 0;
					right: calc(var(--border-width) * -1);
					box(var(--border-width), 100%);
					bg();
				}
			}
		}
	}
}

@-moz-document regexp("(moz|chrome)-extension://.*") {
	// Hide elements
	#theme-label, #theme-label + div,
	#write-for-frames, // Plus sign for "write for"
	.sync-options, // ..section
	#popup-button,
	#find-styles,
	#beautify,
	#publish,
	#lint {
		display: none $i;
	}

	// Global
	body {
		bgc();
	}

	a {
		&, &:hover {
			color: var(--fg-link);
		}

		&:not(:hover) {
			text-decoration: none;
		}
	}
	.svg-icon {
		fill: var(--fg2);

		#stylus a:hover &,
		#stylus &:hover {
			fill: var(--fg);
			anim();
		}
		a:focus &,
		&:focus {
			transform: scale(.9);
			anim();
		}

		&.info {
			margin-left: 0;
		}

		&.checked,
		&.select-arrow,
		.add-applies-to &,
		.remove-applies-to & {
			display: none $i;
		}
	}

	input {
		&:not([type]),
		&[type="text"],
		&[type="number"],
		&[type="search"] {
			normalise-input();
		}
		&[type="date"],
		/select {
			normalise-select();
		}
		&[type="checkbox"] {
			normalise-checkbox();
		}
		&[type="radio"] {
			normalise-radio();

			&::after {
				display: none;
			}
		}
		&[type="color"] {
			normalise-color();
		}
		&[type="number"] {
			text-align: left;
		}
	}

	.checkmate {
		box($select-size);

		#stylus-popup & {
			width: s('calc(%s + var(--pad))', $select-size) $i;
		}
		#stylus-manage #installed & {
			margin: 0;
			margin-right: 1ch;
			position: initial;
		}
	}
	.onoffswitch {
		margin: 0;
		box($select-size);

		input {
			pos();
		}
		span {
			display: none;
		}
	}
	label {
		padding: 0 $i;
		flex-direction: row-reverse;
		justify-content: flex-end;

		& > svg {
			display: none $i;
		}
	}
	.firefox .chromium-only, .chromium-only.chrome-no-popup-border {
		opacity: .5;
		display: flex;
		pointer-events: none;
	}

	button {
		normalise-button();
		background-image: none $i;
		mar(right);
	}

	// Editor
	.cm-s-default .cm {
		&-header, &-def, &-negative, &-qualifier, &-error, &-attribute, &-link {
			clr(9);
		}
		&-quote, &-positive, &-number, &-variable-3, &-builtin, &-atom {
			clr(10);
		}
		&-operator {
			clr(11);
		}
		&-keyword, &-tag {
			clr(12);
		}
		&-string, &-string-2, &-property {
			clr(13);
		}
		&-variable, &-variable-2 {
			clr(14);
		}
		&-comment, &-bracket, &-punctuation, &-meta {
			fg(2);
		}
		&-matchhighlight {
			hl();
		}

		if (show-whitespace) {
			&-tab {
				position: relative;

				&::before {
					content: '.';
					position: absolute;
					bottom: 50%;
					left: 5%;
					width: 90%;
					display: block;
					color: transparent;
					border-bottom: 1px solid var(--fg3);
				}
			}
		}
	}
	.CodeMirror {
		bgc();

		&-gutters {
			bg(2);
			brd(right);
		}
		&-lines {
			padding: var(--pad) 0;
		}
		&-line {
			padding: 0 var(--pad) $i;

			&number {
				fg(2);

				&:hover {
					fg();
				}
			}
		}

		&-activeline-background,
		&-selected {
			bg(2);
		}

		&-cursor {
			border-left-color: var(--fg);
		}
		&-matchingbracket,
		&-nonmatchingbracket {
			color: var(--hl-fg) $i;
		}
		&-matchingbracket {
			background-color: var(--hl);
		}
		&-nonmatchingbracket {
			background-color: var(--hl-error);
		}

		&-search-hint {
			fg(2);
			replace-text('/re/ for regex');
		}
	}
	.CodeMirror .applies {
		&-to {
			bg(3);
			pad();
			brd(top); brd(bottom);
			margin: var(--pad) 0 $i;

			&::before {
				display: none;
			}

			label {
				fg();
				margin-right: 1ch;
				height: $input-h;

				&::before {
					mar(right, 0);
				}
			}

			li {
				&:not(.applies-to-everything) {
					& > * {
						margin: 0;
					}
					& > :last-child {
						margin-right: calc(var(--pad) + 1ch);
					}
				}

				&:not(:only-child):not(:last-child) {
					mar(bottom);
				}
			}

			a {
				margin-left: 1ch;
				height: unset;
			}
		}

		&-to-item, &-value-wrapper {
			gap: var(--pad);
		}
		&-value-wrapper button {
			mar(right, 0);
		}
	}

	// Manage
	if (show-styles) {
		#installed::before {
			content: attr(data-total)' styles';
			position: absolute;
			top: var(--pad);
			right: var(--pad);
			fg(2);
		}
	}
	.newUI {
		#installed {
			mar(0);
		}
		.entry {
			&.odd {
				bg(2);
			}
			& > * {
				pad();
			}
		}
		.style-name {
			display: flex;
			align-items: center;

			&::before {
				display: none;
			}

			&-link {
				fg();

				&::after {
					display: none;
				}
			}
		}
	}

	// Sidebar
	#header {
		bg();
		pad();
		brd(right);
		box-shadow: none;

		@media (max-width: 850px) {
			border-right: none $i;
			brd(bottom);
			display: block;
		}

		h1 {
			text-align: center;
			mar(bottom);
		}

		details {
			& + & {
				mar(top, 0);
			}
		}
		summary {
			mar(0);

			@media (max-width: 850px) {
				pad(left, 0);
				mar(right);
			}

			h2 {
				border: none;
			}

			/#stylus-edit & + * {
				padding: var(--pad) 0;
				mar(left, 0);
			}
		}
	}

	// ..in editor
	#basic-info {
		mar(bottom);

		@media (max-width: 850px) {
			& > :not(:last-child) {
				mar(right);
			}
		}

		&-enabled {
			margin-top: 0;
			height: $input-h;
			line-height: unset;

			& > * {
				mar(right);
			}
		}
	}
	#preview-errors {
		background-color: var(--hl-error);
		color: var(--hl-fg);
		padding: 0 .5ch;
		mar(left, 0);
	}
	#actions {
		& > button {
			mar(bottom);
		}
		& > div > a {
			mar(0);
		}
	}
	.options-column {
		@media (max-width: 850px) {
			padding-right: 1ch;
		}

		& > [class="option"] {
			margin-bottom: calc(var(--pad) / 2) $i;
			display: flex;
			align-items: baseline;
		}
	}
	#options-wrapper .options-column:nth-child(2),
	.aligned:not(:first-child) > :not(.svg-inline-wrapper) {
		mar(top);
	}
	#options-wrapper .options-column:nth-child(2) {
		@media (max-width: 850px) {
			mar(top, 0);
		}
	}
	#colorpicker-settings.svg-inline-wrapper {
		mar(left);
	}
	.option.aligned > label {
		padding-right: 1ch $i;
		vertical-align: unset $i;
		display: table-cell $i;
	}
	#lint {
		margin-left: -4px;
		mar(right, 0);
	}

	// ..in manage
	#search-wrapper, #sort-wrapper,
	#search-help, #sorter-help,
	#update-check, #update-all,
	#header #filters summary,
	#header a[href^="edit"],
	#add-style-wrapper > * {
		mar(0);
	}
	#manage-settings {
		pad(0);

		.settings-column {
			pad(0);
			mar(0);
		}
	}
	#filters {
		& > label {
			left: 0;
		}

		&:not([open]) + #sort-wrapper {
			mar(top);
		}

		label:hover,
		.filter-selection:hover {
			background-color: transparent;
			transition: none;
		}
	}
	.filter-selection {
		mar(bottom);
		left: 0;
		display: flex;
		align-items: center;
		gap: 1ch;
	}
	.select-resizer {
		position: relative;
		left: 0;
	}
	#search-wrapper, #sort-wrapper {
		mar(bottom);
		gap: var(--pad);
	}
	#add-style {
		&-label {
			mar(bottom, 0);
		}
		&-as-usercss-wrapper {
			flex-direction: row;
		}
	}
	#manage-options-button,
	#add-style-wrapper,
	#backup-buttons {
		mar(top);
	}
	#backup-buttons {
		@media (max-width: 850px) {
			mar(top, 0);
		}
	}
	#manage-text {
		pad(top, 0);

		& > :not(:last-child)::after {
			margin: 0 1ch;
		}

		.svg-icon.info {
			margin-left: 1ch;
		}
	}

	#stylus {
		// Sidebar overlay
		/*--sidebar-bg: var(--bg-tr);
		--sidebar-width: 16px;

		@media (max-width: 850px) {
			#header {
				border-right: 1px dashed var(--fg2);
				border-bottom: none;
				position: fixed;
				width: 280px;
				height: 100%;
			}

			#details-wrapper {
				flex-direction: column $i;
			}

			&.usercss .CodeMirror-scroll {
				max-height: 100%;
			}
		}

		#header {
			background-color: var(--sidebar-bg) $i;
			backdrop-filter: var(--popup-filter);
			anim();

			&:not(:hover) {
				width: var(--sidebar-width) $i;
				flex: 0 0 var(--sidebar-width);
				padding: 0 $i;

				* {
					opacity: 0;
				}
			}

			&::-webkit-scrollbar {
				display: none;
			}
		}

		&-manage, &-edit {
			#sections, #installed {
				padding-left: var(--sidebar-width);
			}
		}

		&-install-usercss {
			#header {
				position: absolute;
				height: 100%;
			}

			.main {
				margin-left: var(--sidebar-width);
			}
		}*/

		// Popup
		&-popup {
			#installed {
				brd(bottom);
			}

			.main-controls {
				display: block;

				.actions > ^[2..-1] {
					pad(left, 0);
					mar(bottom);
				}
			}

			.entry {
				&::before {
					top: 0;
					right: var(--pad);
					height: 100%;
					display: flex;
					align-items: center;
					fg(2);
				}

				&:nth-child(even) {
					bg(2);
				}

				&-content {
					height: s('calc(%s + var(--pad) * 2)', $select-size);
					padding-right: calc(var(--pad) * 2);
				}

				.main-controls {
					pad(right);
				}

				.style-name {
					line-height: normal;
					flex-direction: row;
					justify-content: flex-start;

					&::before {
						display: none;
					}

					input[type="checkbox"] {
						mar(left);
						position: relative;
						top: 0;
						left: 0;
					}
				}
				&.disabled .style-name {
					fg();
				}
			}

			& > .actions {
				pad();
				margin: 0;
				display: flex;
				flex-direction: column;

				& > .main-controls {
					order: -1;
				}
			}
			#disable-all-wrapper,
			#popup-options {
				pad(0);
			}
			#disable-all-wrapper {
				mar(bottom);
			}
			#write-style-for {
				margin-right: 1ch;
			}
			.match[data-frame-id="0"] {
				min-width: unset;
			}
		}

		// Dialogs
		.menu {
			&-items-wrapper {
				bg();
				pad();
				brd();
				shd(big);
			}

			&-title,
			/#confirm > div > b {
				margin: auto;
				pad(bottom);
			}

			&-item {
				flex-direction: row;
				justify-content: flex-start;

				&:hover, &:active {
					background-color: transparent;
				}

				&:not(:last-of-type) {
					mar(bottom);
				}

				& > span {
					margin: 0;
				}
			}

			.checkbox-container {
				box($select-size)
				margin: 0;
			}
			&-icon {
				width: $select-size;
			}

			&-buttons-wrapper {
				pad(top);
			}
		}

		&-embedded-options,
		&-options {
			background-color: transparent $i;
		}
		&-options {
			brd();
			shd(big);

			#actions {
				bg(3);
				pad();
				brd(top);
				border-bottom: none;
				border-radius: 0 0 var(--border-radius) var(--border-radius);
				mar(0);

				button {
					mar(0);
				}
			}

			#options {
				bg();
				border-radius: 0 0 var(--border-radius) var(--border-radius);

				&-title {
					letter-spacing: 0;
					padding-left: 30%;
				}

				.block {
					.options-wrapper ^[3..-1] {
						padding: 0 var(--pad) var(--pad);
						brd(bottom);
						margin: var(--pad) 0;
					}

					&:last-child {
						border-bottom: none;
						margin-bottom: 0;
					}

					h1 {
						padding-right: 1ch;
					}

					label, .label {
						mar(0);

						&:not(:last-child) {
							mar(bottom);
						}

						& > :first-child {
							mar(right, 0);
						}
						&:not([disabled]):hover > :first-child {
							text-shadow: none;
						}
					}
				}

				.iconset {
					gap: 1ch;

					input[type="radio"] {
						margin: 0;
					}
				}

				// Option description
				label {
					align-items: start;

					& > :first-child {
						display: grid;
						flex-direction: column;
						align-items: center;

						&:not([title]) {
							height: $select-size;
						}
					}

					[title]::after {
						content: attr(title);
						fg(2);
						line-height: 1.3;
						white-space: pre-wrap;
						pointer-events: none;
					}
				}
				.block[id] label > :first-child {
					height: initial;
				}
				.block[id] label > :first-child,
				span[title] {
					grid-template-rows: $select-size auto;
					gap: 1ch;
				}
				a[title] svg {
					display: none;
				}
			}
		}
	}

	#message-box {
		background-color: transparent;

		& > div {
			bg();
			brd();
			shd(big);
		}

		&-title {
			pad();
			padding-left: calc(var(--pad) * 2 + 16px);
		}

		&-contents {
			pad();
		}

		&-buttons {
			bg(3);
			text-align: center;
			pad();
			brd(top);
			display: flex;
			justify-content: space-between;

			button {
				margin: 0;
			}
		}
	}
	.config {
		&-dialog {
			--pad: inherit;
		}
		&-body label {
			mar(right, 0);
			border-top: none $i;

			&:not(:last-child) {
				mar(bottom);
			}
		}
		&-name {
			mar(right, 0);
		}
		&-reset-icon {
			height: $select-size;
			cursor: pointer;
			order: -1;

			.svg-icon {
				pad(0);
				box(16px);
			}
		}
	}

	#message-box > div,
	#stylus-options,
	#help-popup {
		dropfade();
	}
	#message-box {
		animation: none;
	}
	#message-box,
	#options {
		&-title {
			bg(3);
			pad(top); pad(bottom);
			brd(bottom);
			border-radius: var(--border-radius) var(--border-radius) 0 0;
			min-height: unset;
			display: flex;
			align-items: center;

			&::before {
				left: var(--pad);
				background-image: url('./images/icon/16.png');
				padding: 0 16px 16px 0;
			}
		}

		&-close-icon {
			top: 0;
			right: 0;
			box(29px, 100%);
			align-items: center;
			justify-content: center;
		}
	}

	#help-popup {
		/#confirm > div, & {
			bg();
			pad(0);
			brd();
			shd(big);
		}

		.title {
			bg(2);
			padding: var(--pad) 24px var(--pad) var(--pad);
			brd(bottom);
			border-radius: var(--border-radius) var(--border-radius) 0 0;
			margin: 0;
		}

		.buttons {
			mar(top);

			button:nth-child(n+2) {
				display: unset;
				mar(left);
				mar(top);
			}
		}
		button {
			display: flex;
			align-items: center;
			margin: auto;
		}

		.contents {
			pad();
		}
		.keymap-list {
			pad(0);

			input[type="search"] {
				mar(0);
				mar(bottom);
			}
		}
	}
	.regexp-report {
		&-note {
			fg(2);
		}
		details[data-type="full"] {
			clr(10);
		}
	}
	.help-text mark {
		bgc(2);
		brd();
	}

	#search-replace-dialog {
		bg(2);
		border: none;
		brd(bottom);
		box-shadow: none;
		opacity: 1 $i;
		height: calc(var(--pad) * 4 + var(--font-size));
		left: 280px;
		right: var(--scrollbar-width);
		max-width: unset;
		center();
		justify-content: center;

		.compact-layout & {
			left: 0;
			top: unset;
			bottom: 0;
			brd(top);
			border-bottom: none;
		}

		& > div {
			background-color: unset $i;
			pad(0);
		}

		[data-type="input-wrapper"] {
			align-items: center;

			&::before {
				content: 'Search:\00a0'
			}
		}
		textarea {
			bgc();
			padding: calc(var(--pad) / 2);
			brd();
			mar(right);
			height: unset;
			focus();

			&::placeholder {
				color: transparent;
			}
		}
		[data-type="actions"] {
			padding-left: 0;
			opacity: 1;

			a {
				height: calc(16px + var(--pad) - 1px); // TODO: doesn't work with uneven padding
				display: flex;
				align-items: center;

				&:first-child { border-radius: var(--border-radius) 0 0 var(--border-radius); }
				&:last-child { border-radius: 0 var(--border-radius) var(--border-radius) 0; }
				&:not(:first-child) { border-left: none; }
				&:not(:last-child) { border-right: none; }
			}
		}
		[data-action] {
			bg();
			brd();
			border-radius: 0;
			padding: 0 calc(var(--pad) / 2);
		}
		[data-action="case"] {
			fg(2);

			&:hover {
				fg();
				text-decoration: none;
			}
		}

		.CodeMirror-search-hint {
			display: none;
		}
		[data-type="tally"] {
			fg(2);
			opacity: 1;
			position: absolute;
			right: var(--pad);

			&:not(:empty)::after {
				content: '\00a0matches';
			}
		}
	}
}
