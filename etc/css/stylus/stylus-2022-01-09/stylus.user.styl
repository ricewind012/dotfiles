/* ==UserStyle==
@name           Stylus
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus

@var checkbox show-styles "Show style count" 1
@var checkbox show-whitespace "Show tabs" 1
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

svar(var) {
	s('var(--%s)', var);
}

clr(n) {
	color: s('var(--color%s)', n);
}

bgc(n1 =, n2 =) {
	background-color: s('var(--bg%s)', n1);
	color: s('var(--fg%s)', n2);
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: var(--border-width) solid svar(color);

	if (radius || !pos) {
		border-radius: var(--border-radius);
	}
}

box(w, h = w) {
	width: w;
	height: h;
}

pos(offset = 0) {
	left: offset;
	top: offset;
	right: offset;
	bottom: offset;
}

anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(i = null) {
	i = i ? !important : null;

	anim();

	&:focus {
		border-color: var(--hl) i;
		box-shadow: var(--shadow-ins) var(--hl) i;
		outline: none;
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px;
	color: transparent;

	if (content) {
		// Replace
		&::{pos} {
			content: content;
			letter-spacing: 0;
			color: svar(text-color);
		}
	} else {
		// Hide
		* {
			letter-spacing: 0;
			color: svar(text-color);
		}
	}
}

normalise-select(e = \&) {
	{e} {
		bgc(2);
		background-image:
			linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
			linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
			linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%);
		background-size: 20px 20px;
		background-repeat: no-repeat;
		background-position: right 4px;
		padding: 0 20px 0 var(--pad);
		brd();
		height: 28px;
		focus();
	}
}

normalise-button(e = \&) {
	{e} {
		background-color: var(--bg2);
		color: var(--fg);
		padding: 0 calc(var(--pad) * 2);
		brd();
		height: 28px;
		cursor: pointer;
		focus();

		&:disabled {
			opacity: .5;
			pointer-events: none;
		}
	}
}

normalise-input(e = \&) {
	{e} {
		bgc(2);
		padding: 0 var(--pad);
		brd();
		height: 28px;
		focus();

		&::placeholder {
			color: var(--fg3);
		}
	}
}

normalise-color(e = \&) {
	{e} {
		background-color: var(--bg2);
		padding: 0;
		brd();
		box(16px);
		focus();

		&::-webkit-color-swatch {
			border: none;
			border-radius: calc(var(--border-radius) * .33);

			&-wrapper {
				padding: 0;
			}
		}
	}
}

normalise-checkbox(e = \&) {
	/label {
		display: flex;
		align-items: center;
		gap: 1ch;
	}

	{e} {
		appearance: none;
		background-color: var(--bg2);
		border: 1px solid var(--border);
		border-radius: calc(var(--border-radius) * .33);
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		margin: 0;
		position: relative;
		box(16px);
		focus();

		&::before, &::after {
			content: '';
			position: absolute;
			pos();
			background-color: var(--hl);
			transform-origin: 0 0;
		}

		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0);
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0);
		}
		&:indeterminate::before {
			transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25);
			transition-duration: 33.33333333ms;
		}

		&:checked {
			&::before {
				transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4);
				transition-duration: 33.33333333ms;
			}
			&::after {
				transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2);
				transition-delay: 33.33333333ms;
				anim();
			}
		}
	}
}

normalise-radio(e = \&) {
	{e} {
		appearance: none;
		background-color: var(--bg2);
		border: 1px solid var(--border);
		border-radius: 50%;
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		margin: 0;
		position: relative;
		box(16px);
		focus();

		&::before {
			content: '';
			position: absolute;
			pos(3px);
			border-radius: 50%;
			background-color: var(--hl);
			transition: transform var(--trans-dur) linear;
			transform: scale(0);
		}
		&:disabled::before {
			background-color: var(--fg3);
		}
		&:checked::before {
			transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5);
			transform: scale(1);
			anim();
		}
	}
}

@-moz-document domain("stylus-lang.com") {
	// Hide elements
	header, // Logo
	main h1,
	main > a, // GitHub
	aside > :not(nav), // Credits / footer
	aside::-webkit-scrollbar {
		display: none !important;
	}
	main {
		padding-top: 0 !important;
	}

	// Content
	html {
		bgc();
		line-height: unset;
	}

	a {
		color: var(--fg-link);
		text-decoration: none;

		&:hover {
			text-decoration: underline;
		}
	}

	h1, h2, h3, h4, h5, h6 {
		color: var(--hl);
	}

	main {
		padding: var(--pad) !important;
	}

	p {
		margin-bottom: var(--pad);
	}

	.permalink {
		color: transparent;
		border: none;
		margin: 0;
		position: absolute;
		width: calc(100% - var(--body-pad));
	}

	pre, code {
		background-color: var(--bg2);
		brd();
		margin-bottom: var(--pad);
	}
	pre {
		padding: var(--pad);

		.highlighter-rouge:last-child & {
			margin-bottom: 0;
		}

		code {
			border: none !important;
		}
	}

	// Sidebar
	.sidebar {
		background-color: var(--accent);
		padding: 0;
		border-bottom: none;
		flex: none;
		order: 1;

		nav {
			text-transform: unset;
			letter-spacing: 0;
			brd(right, accent-border);
			margin-bottom: 0;

			& > a, & > strong {
				color: var(--fg);
				padding: var(--pad);
				border: none;
			}

			& > :not(:first-child) {
				brd(top, accent-border);
			}
			& > :first-child {
				border-top: none !important;
			}

			& > a:hover {
				background-color: var(--hl);
				color: var(--hl-fg);
			}

			& > strong {
				background-color: var(--bg);
				position: relative;

				&::after {
					content: '';
					position: absolute;
					top: 0;
					right: calc(var(--border-width) * -1);
					box(var(--border-width), 100%);
					background-color: var(--bg);
				}
			}
		}
	}
}

@-moz-document regexp("(moz|chrome)-extension://.*") {
	// Hide elements
	#write-for-frames, // Plus sign for "write for"
	.sync-options, // ..section
	#popup-button,
	#find-styles,
	#beautify,
	#publish,
	#lint {
		display: none;
	}

	// Global
	body {
		bgc();
	}

	a {
		&, &:hover {
			color: var(--fg-link);
		}

		&:not(:hover) {
			text-decoration: none;
		}
	}
	.svg-icon {
		fill: var(--fg2);

		#stylus a:hover &,
		#stylus &:hover {
			fill: var(--fg);
			anim();
		}
		a:focus &,
		&:focus {
			transform: scale(.9);
			anim();
		}

		&.info {
			margin-left: 0;
		}

		&.checked,
		&.select-arrow,
		.add-applies-to &,
		.remove-applies-to & {
			display: none !important;
		}
	}

	input[type="date"],
	#stylus select {
		normalise-select();
	}
	input[type="radio"] {
		normalise-radio();

		&::after {
			display: none;
		}
	}
	.checkmate {
		box(16px);

		#stylus-popup & {
			width: calc(16px + var(--pad));
		}
		#stylus-manage #installed & {
			margin: 0;
			margin-right: 1ch;
			position: initial;
		}
	}
	#stylus .onoffswitch {
		margin: 0;
		box(16px);

		input {
			pos();
		}
		span {
			display: none;
		}
	}
	#stylus input[type="checkbox"] {
		normalise-checkbox();
		focus(true);
	}
	#stylus input {
		&:not([type]),
		&[type="text"],
		&[type="number"],
		&[type="search"] {
			normalise-input();
		}
		&[type="color"] {
			normalise-color();
		}
		&[type="number"] {
			text-align: left;
		}
	}
	label {
		padding: 0 !important;
		flex-direction: row-reverse;
		justify-content: flex-end;

		& > svg {
			display: none !important;
		}
	}
	.firefox .chromium-only, .chromium-only.chrome-no-popup-border {
		opacity: .5;
		display: flex;
		pointer-events: none;
	}

	button {
		normalise-button();
		background-image: none !important;
		margin-right: var(--pad) !important;

		&:not(:disabled) {
			&, &:hover {
				background-color: var(--bg2);
			}
			&:hover {
				border-color: var(--border);
			}
			&:focus {
				border-color: var(--hl);
			}
		}
	}

	// Editor
	.cm-s-default .cm {
		&-header, &-def, &-negative, &-qualifier, &-error, &-attribute, &-link {
			clr(9);
		}
		&-quote, &-positive, &-number, &-variable-3, &-builtin, &-atom {
			clr(10);
		}
		&-operator {
			clr(11);
		}
		&-keyword, &-tag {
			clr(12);
		}
		&-string, &-string-2, &-property {
			clr(13);
		}
		&-variable, &-variable-2 {
			clr(14);
		}
		&-comment, &-bracket, &-punctuation, &-meta {
			color: var(--fg2) !important;
		}
		&-matchhighlight {
			background-color: var(--hl) !important;
			color: var(--hl-fg) !important;
		}

		if (show-whitespace) {
			&-tab {
				position: relative;

				&::before {
					content: '.';
					position: absolute;
					bottom: 50%;
					left: 5%;
					width: 90%;
					display: block;
					color: transparent;
					border-bottom: 1px solid var(--fg3);
				}
			}
		}
	}
	.CodeMirror {
		bgc();

		&-gutters {
			background-color: var(--bg2);
			brd(right);
		}
		&-lines {
			padding: var(--pad) 0;
		}
		&-line {
			padding: 0 var(--pad) !important;

			&number {
				color: var(--fg2);

				&:hover {
					color: var(--fg);
				}
			}
		}

		&-activeline-background,
		&-selected {
			background-color: var(--bg2) !important;
		}

		&-cursor {
			border-left-color: var(--fg);
		}
		&-matchingbracket,
		&-nonmatchingbracket {
			color: var(--hl-fg) !important;
		}
		&-matchingbracket {
			background-color: var(--hl);
		}
		&-nonmatchingbracket {
			background-color: var(--hl-error);
		}

		&-search-hint {
			color: var(--fg2);
			replace-text('/re/ for regex');
		}
	}
	.CodeMirror .applies {
		&-to {
			background-color: var(--bg3);
			padding: var(--pad) !important;
			brd(top); brd(bottom);
			margin: var(--pad) 0 !important;

			&::before {
				display: none;
			}

			label {
				color: var(--fg);
				margin-right: 1ch;
				height: 28px;

				&::before {
					margin-right: 0;
				}
			}

			li {
				&:not(.applies-to-everything) {
					& > * {
						margin: 0;
					}
					& > :last-child {
						margin-right: calc(var(--pad) + 1ch);
					}
				}

				&:not(:only-child):not(:last-child) {
					margin-bottom: var(--pad);
				}
			}

			a {
				margin-left: 1ch;
				height: unset;
			}
		}

		&-to-item, &-value-wrapper {
			gap: var(--pad);
		}
		&-value-wrapper button {
			margin-right: 0 !important;
		}
	}

	// Manage
	if (show-styles) {
		#installed::before {
			content: attr(data-total)' styles';
			position: absolute;
			top: var(--pad);
			right: var(--pad);
			color: var(--fg2);
		}
	}
	.newUI {
		#installed {
			margin: 0;
		}
		.entry {
			&.odd {
				background-color: var(--bg2);
			}
			& > * {
				padding: var(--pad);
			}
		}
		.style-name {
			display: flex;
			align-items: center;

			&::before {
				display: none;
			}

			&-link {
				color: var(--fg) !important;

				&::after {
					display: none;
				}
			}
		}
	}

	// Sidebar
	#header {
		background-color: var(--accent);
		padding: var(--pad);
		brd(right, accent-border);
		box-shadow: var(--shadow-vrt);

		@media (max-width: 850px) {
			border-right: none;
			brd(bottom, accent-border);
			box-shadow: var(--shadow-mid);
			display: block;
		}

		h1 {
			text-align: center;
			margin-bottom: var(--pad);
		}

		details {
			&[open] summary {
				padding-bottom: var(--pad);
			}

			& + & {
				margin-top: 0 !important;
			}
		}
		summary {
			margin: 0;

			@media (max-width: 850px) {
				padding-left: 0;
				margin-right: var(--pad);
			}

			h2 {
				border: none;
			}

			/#stylus-edit & + * {
				padding: var(--pad) 0;
				margin-left: 0;
			}
		}
	}

	// ..in editor
	#basic-info {
		margin-bottom: var(--pad);

		@media (max-width: 850px) {
			& > :not(:last-child) {
				margin-right: var(--pad);
			}
		}

		&-enabled {
			margin-top: 0;
			height: 28px;
			line-height: unset;

			& > * {
				margin-right: var(--pad);
			}
		}
	}
	#preview-errors {
		background-color: var(--hl-error);
		color: var(--hl-fg);
		padding: 0 .5ch;
		margin-left: 0;
	}
	#actions button {
		margin-bottom: var(--pad);
	}
	.options-column {
		@media (max-width: 850px) {
			padding-right: 1ch;
		}

		& > [class="option"] {
			margin-bottom: calc(var(--pad) / 2) !important;
			display: flex;
			align-items: baseline;
		}
	}
	#options-wrapper .options-column:nth-child(2),
	.aligned:not(:first-child) > :not(.svg-inline-wrapper) {
		margin-top: var(--pad);
	}
	#options-wrapper .options-column:nth-child(2) {
		@media (max-width: 850px) {
			margin-top: 0;
		}
	}
	#colorpicker-settings.svg-inline-wrapper {
		margin-left: var(--pad);
	}
	.option.aligned > label {
		padding-right: 1ch !important;
		vertical-align: unset !important;
	}
	#lint {
		margin-left: -4px;
		margin-right: 0;
	}

	// ..in manage
	#search-wrapper, #sort-wrapper,
	#search-help, #sorter-help,
	#update-check, #update-all,
	#header #filters summary,
	#header a[href^="edit"],
	#add-style-wrapper > * {
		margin: 0;
	}
	#manage-settings {
		padding: 0;

		.settings-column {
			padding: 0;
			margin: 0;
		}
	}
	#filters {
		& > label {
			left: 0;
		}

		&:not([open]) + #sort-wrapper {
			margin-top: var(--pad);
		}

		label:hover,
		.filter-selection:hover {
			background-color: transparent;
			transition: none;
		}
	}
	.filter-selection {
		margin-bottom: var(--pad);
		left: 0;
		display: flex;
		align-items: center;
		gap: 1ch;
	}
	.select-resizer {
		position: relative;
		left: 0;
	}
	#search-wrapper, #sort-wrapper {
		margin-bottom: var(--pad);
		gap: var(--pad);
	}
	#add-style {
		&-label {
			margin-bottom: 0 !important;
		}
		&-as-usercss-wrapper {
			flex-direction: row;
		}
	}
	#manage-options-button,
	#backup-buttons {
		margin-top: var(--pad);
	}
	#backup-buttons {
		@media (max-width: 850px) {
			margin-top: 0;
		}
	}
	#manage-text {
		padding-top: 0;

		& > :not(:last-child)::after {
			margin: 0 1ch;
		}

		.svg-icon.info {
			margin-left: 1ch;
		}
	}

	#stylus {
		// Sidebar overlay
		/*--sidebar-bg: var(--bg-tr);
		--sidebar-width: 16px;

		@media (max-width: 850px) {
			#header {
				border-right: 1px dashed var(--fg2);
				border-bottom: none;
				position: fixed;
				width: 280px;
				height: 100%;
			}

			#details-wrapper {
				flex-direction: column !important;
			}

			&.usercss .CodeMirror-scroll {
				max-height: 100%;
			}
		}

		#header {
			background-color: var(--sidebar-bg) !important;
			backdrop-filter: var(--popup-filter);
			anim();

			&:not(:hover) {
				width: var(--sidebar-width) !important;
				flex: 0 0 var(--sidebar-width);
				padding: 0 !important;

				* {
					opacity: 0;
				}
			}

			&::-webkit-scrollbar {
				display: none;
			}
		}

		&-manage, &-edit {
			#sections, #installed {
				padding-left: var(--sidebar-width);
			}
		}

		&-install-usercss {
			#header {
				position: absolute;
				height: 100%;
			}

			.main {
				margin-left: var(--sidebar-width);
			}
		}*/

		// Popup
		&-popup {
			#installed {
				brd(bottom);
			}

			.main-controls {
				display: block;

				.actions > ^[2..-1] {
					padding-left: 0;
					margin-bottom: var(--pad) !important;
				}
			}

			.entry {
				&::before {
					top: 0;
					right: var(--pad);
					height: 100%;
					display: flex;
					align-items: center;
					color: var(--fg2);
				}

				&:nth-child(even) {
					background-color: var(--bg2);
				}

				&-content {
					height: calc(16px + var(--pad) * 2);
					padding-right: calc(var(--pad) * 2);
				}

				.main-controls {
					padding-right: var(--pad);
				}

				.style-name {
					line-height: normal;
					flex-direction: row;
					justify-content: flex-start;

					&::before {
						display: none;
					}

					input[type="checkbox"] {
						margin-left: var(--pad);
						position: relative;
						top: 0;
						left: 0;
					}
				}
				&.disabled .style-name {
					color: var(--fg);
				}
			}

			& > .actions {
				padding: var(--pad) !important;
				margin: 0;
				display: flex;
				flex-direction: column;

				& > .main-controls {
					order: -1;
				}
			}
			#disable-all-wrapper,
			#popup-options {
				padding: 0;
			}
			#disable-all-wrapper {
				margin-bottom: var(--pad);
			}
			#write-style-for {
				margin-right: 1ch;
			}
			.match[data-frame-id="0"] {
				min-width: unset;
			}
		}

		// Dialogs
		.menu {
			&-items-wrapper {
				background-color: var(--bg);
				padding: var(--pad);
				brd();
				box-shadow: var(--shadow-big);
			}

			&-title,
			/#confirm > div > b {
				margin: auto;
				padding-bottom: var(--pad);
			}

			&-item {
				flex-direction: row;
				justify-content: flex-start;

				&:hover, &:active {
					background-color: transparent;
				}

				&:not(:last-of-type) {
					margin-bottom: var(--pad);
				}

				& > span {
					margin: 0;
				}
			}

			.checkbox-container {
				box(16px)
				margin: 0;
			}
			&-icon {
				width: 16px;
			}

			&-buttons-wrapper {
				padding-top: 8px;
			}
		}

		&-embedded-options,
		&-options {
			background-color: transparent;
		}
		&-options {
			brd();
			box-shadow: var(--shadow-big);

			#actions {
				background-color: var(--bg3);
				padding: var(--pad);
				brd(top);
				border-bottom: none;
				border-radius: 0 0 var(--border-radius) var(--border-radius);
				margin: 0;

				button {
					margin: 0;
				}
			}

			#options {
				background-color: var(--bg);
				border-radius: 0 0 var(--border-radius) var(--border-radius);

				&-title {
					letter-spacing: 0;
					padding-left: 30%;
				}

				.block {
					.options-wrapper ^[3..-1] {
						padding: 0 var(--pad) var(--pad);
						brd(bottom);
						margin: var(--pad) 0;
					}

					&:last-child {
						border-bottom: none;
						margin-bottom: 0;
					}

					h1 {
						padding-right: 1ch;
					}

					label, .label {
						margin: 0;

						&:not(:last-child) {
							margin-bottom: var(--pad);
						}

						& > :first-child {
							margin-right: 0;
						}
						&:not([disabled]):hover > :first-child {
							text-shadow: none;
						}
					}
				}

				.iconset {
					gap: 1ch;

					input[type="radio"] {
						margin: 0;
					}
				}

				// Option description
				label {
					align-items: start;

					& > :first-child {
						display: grid;
						flex-direction: column;
						align-items: center;

						&:not([title]) {
							height: 16px;
						}
					}

					[title]::after {
						content: attr(title);
						color: var(--fg2);
						line-height: 1.3;
						white-space: pre-wrap;
						pointer-events: none;
					}
				}
				.block[id] label > :first-child {
					height: initial;
				}
				.block[id] label > :first-child,
				span[title] {
					grid-template-rows: 16px auto;
					gap: 1ch;
				}
				a[title] svg {
					display: none;
				}
			}
		}
	}

	#message-box {
		background-color: transparent;

		& > div {
			background-color: var(--bg);
			brd();
			box-shadow: var(--shadow-big);
		}

		&-title {
			padding: var(--pad);
			padding-left: calc(var(--pad) * 2 + 16px);
		}

		&-contents {
			padding: var(--pad);
		}

		&-buttons {
			background-color: var(--bg3);
			text-align: center;
			padding: var(--pad);
			brd(top);
			display: flex;
			justify-content: space-between;

			button {
				margin: 0;
			}
		}
	}
	.config {
		&-dialog {
			--pad: inherit;
		}
		&-body label {
			margin-right: 0;
			border-top: none !important;

			&:not(:last-child) {
				margin-bottom: var(--pad);
			}
		}
		&-name {
			margin-right: 0;
		}
		&-reset-icon {
			height: 16px;
			cursor: pointer;
			order: -1;

			.svg-icon {
				padding: 0;
				box(16px);
			}
		}
	}

	#message-box > div,
	#stylus-options,
	#help-popup {
		dropfade();
	}
	#message-box {
		animation: none;
	}
	#message-box,
	#options {
		&-title {
			background-color: var(--bg3);
			padding-top: var(--pad);
			padding-bottom: var(--pad);
			brd(bottom);
			border-radius: var(--border-radius) var(--border-radius) 0 0;
			min-height: unset;
			display: flex;
			align-items: center;

			&::before {
				left: var(--pad);
				background-image: url('./images/icon/16.png');
				padding: 0 16px 16px 0;
			}
		}

		&-close-icon {
			top: 0;
			right: 0;
			box(29px, 100%);
			align-items: center;
			justify-content: center;
		}
	}

	#help-popup {
		/#confirm > div, & {
			background-color: var(--bg);
			padding: 0;
			brd();
			box-shadow: var(--shadow-big);
		}

		.title {
			background-color: var(--bg2);
			padding: var(--pad) 24px var(--pad) var(--pad);
			brd(bottom);
			border-radius: var(--border-radius) var(--border-radius) 0 0;
			margin: 0;
		}

		.buttons {
			margin-top: var(--pad);

			button:nth-child(n+2) {
				display: unset;
				margin-left: var(--pad);
				margin-top: var(--pad);
			}
		}
		button {
			display: flex;
			align-items: center;
			margin: auto;
		}

		.contents {
			padding: var(--pad);
		}
		.keymap-list {
			padding: 0;

			input[type="search"] {
				margin: 0;
				margin-bottom: var(--pad);
			}
		}
	}
	.regexp-report {
		details[data-type="full"] {
			color: var(--color10);
		}
		&-note {
			color: var(--fg2);
		}
	}
	.help-text mark {
		bgc(2);
		brd();
	}

	#search-replace-dialog {
		background-color: var(--bg2);
		border: none;
		brd(bottom);
		box-shadow: none;
		opacity: 1 !important;
		height: calc(var(--pad) * 4 + var(--font-size));
		left: 280px;
		right: var(--scrollbar-width);
		max-width: unset;
		center();
		justify-content: center;

		.compact-layout & {
			left: 0;
			top: unset;
			bottom: 0;
			brd(top);
			border-bottom: none;
		}

		& > div {
			background-color: unset !important;
			padding: 0 !important;
		}

		[data-type="input-wrapper"] {
			align-items: center;

			&::before {
				content: 'Search:\00a0'
			}
		}
		textarea {
			bgc();
			padding: calc(var(--pad) / 2);
			brd();
			margin-right: var(--pad);
			height: unset;
			focus();

			&::placeholder {
				color: transparent;
			}
		}
		[data-type="actions"] {
			padding-left: 0;
			opacity: 1;

			a {
				height: calc(16px + var(--pad) - 1px); // TODO: doesn't work with uneven padding
				display: flex;
				align-items: center;

				&:first-child { border-radius: var(--border-radius) 0 0 var(--border-radius); }
				&:last-child { border-radius: 0 var(--border-radius) var(--border-radius) 0; }
				&:not(:first-child) { border-left: none; }
				&:not(:last-child) { border-right: none; }
			}
		}
		[data-action] {
			background-color: var(--bg);
			brd();
			border-radius: 0;
			padding: 0 calc(var(--pad) / 2);
		}
		[data-action="case"] {
			color: var(--fg2) !important;

			&:hover {
				color: var(--fg) !important;
				text-decoration: none;
			}
		}

		.CodeMirror-search-hint {
			display: none;
		}
		[data-type="tally"] {
			color: var(--fg2);
			opacity: 1;
			position: absolute;
			right: var(--pad);

			&:not(:empty)::after {
				content: '\00a0matches';
			}
		}
	}
}
