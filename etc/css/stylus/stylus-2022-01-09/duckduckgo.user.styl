/* ==UserStyle==
@name           DuckDuckGo
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

svar(var) {
	s('var(--%s)', var);
}

bgc(n1 =, n2 =) {
	background-color: s('var(--bg%s)', n1);
	color: s('var(--fg%s)', n2);
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: var(--border-width) solid svar(color);

	if (radius || !pos) {
		border-radius: var(--border-radius);
	}
}

box(w, h = w, i = false) {
	i = (i || h == true) ? !important : null;
	h = w == h ? w : h is a 'unit' ? h : w;

	width: w i;
	height: h i;
}

pos(offset = 0) {
	left: offset;
	top: offset;
	right: offset;
	bottom: offset;
}

anim(e = \&, name =, func =) {
	@media (prefers-reduced-motion: no-preference) {
		{e} {
			{name ? animation : transition}: name var(--trans-dur) func;
		}
	}
}

focus(i = null) {
	i = i ? !important : null;

	anim();

	&:focus {
		border-color: var(--hl) i;
		box-shadow: var(--shadow-ins) var(--hl) i;
	}
}

normalise-select(e = \&) {
	{e} { 
		appearance: none;
		bgc(2);
		background-image:
			linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
			linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
			linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%);
		background-size: 20px 20px;
		background-repeat: no-repeat;
		background-position: right 4px;
		padding: 0 20px 0 var(--pad);
		brd();
		height: 28px;
		focus();
	}
}

normalise-button(e = \&) {
	{e} {
		background: none var(--bg2);
		color: var(--fg);
		padding: 0 calc(var(--pad) * 2);
		brd();
		height: 28px;
		cursor: pointer;
		focus();

		&:disabled {
			opacity: .5;
			pointer-events: none;
		}
	}
}

normalise-input(e = \&) {
	{e} {
		bgc(2);
		padding: 0 var(--pad);
		brd();
		height: 28px;
		focus();

		&::placeholder {
			color: var(--fg3);
		}
	}
}

@-moz-document domain("html.duckduckgo.com") {
	:root {
		--max-content-width: 480px;
	}

	// Hide elements
	.header__logo-wrap,
	.search__button,
	.feedback-btn,
	.result--ad {
		display: none !important;
	}

	// Global
	.body--html {
		bgc();
		line-height: 1.3;
	}
	a {
		color: var(--fg-link) !important;

		&:not(:hover) {
			text-decoration: none;
		}
	}
	input, select, textarea {
		color: var(--fg);
	}

	// Header
	#header {
		background-color: var(--accent);
		padding: var(--pad) !important;
		brd(bottom, accent-border);
		box-shadow: var(--shadow-mid);
		display: flex;
	}
	.header__form {
		text-align: center;
		padding-left: 0;
		margin: auto;
		width: var(--max-content-width);
	}
	.search {
		padding: 0;
		border: none;
		box-shadow: none;
		height: 28px;

		&-wrap--home & {
			background-color: var(--bg2);
		}

		&--header {
			margin-bottom: var(--pad);
			width: unset;
		}

		&__input {
			normalise-input();
			top: 0;
			width: calc(100% - var(--pad) * 2 - var(--border-width) * 2);
			height: 100% !important;
		}
	}
	.frm__select {
		line-height: 1;
		padding: 0;
		brd();
		margin-right: 0;
		box(unset, 28px, true);
		focus();

		&:hover {
			background-color: var(--bg2);
		}

		&::after {
			display: none;
		}

		select {
			normalise-select();
			padding: 0 20px 0 var(--pad);
			box(100%, true);
		}
	}

	// Content
	.serp__results {
		padding: var(--body-pad) !important;
		margin: auto;
		max-width: var(--max-content-width);
	}
	.msg--spelling {
		color: var(--fg);
		text-align: center;
		padding: 0;
		margin: 0;
		margin-bottom: var(--pad);

		b::before, b::after {
			content: '"';
		}

		a {
			color: var(--fg-link);
		}
	}
	.zci {
		padding: 0;
		margin: auto;
		width: var(--max-content-width);

		&-wrapper {
			background-color: var(--bg2);
			line-height: 1.3;
			padding: var(--pad) 0;
			brd(bottom);
		}

		&__heading {
			color: var(--fg);
			text-align: center;
			padding-bottom: var(--pad);
		}
		&__image {
			padding-left: calc(var(--pad) * 2);
			padding-bottom: 0;
		}
	}
	.results {
		padding: 0;
		margin: 0;
	}
	.result {
		brd();
		margin-bottom: var(--pad);

		&, &:hover {
			background-color: var(--bg2);
		}

		&__body {
			padding: var(--pad);
		}
		&__a, &__extras, &__icon, &__snippet {
			margin: 0 !important;
		}

		&__title {
			margin-bottom: var(--pad);
		}
		&__a {
			line-height: 1;

			&::before {
				content: '';
				position: absolute;
				pos();
				z-index: 1;
			}
		}

		&__snippet {
			line-height: 1.3;
			display: block;

			&, &:hover, b, strong {
				color: var(--fg) !important;
			}
		}
		&__extras + .clear::before {
			content: 'No description';
		}
	}
	.nav-link {
		padding-left: 0;
	}
	.btn {
		normalise-button();

		&:hover, &:focus {
			background-color: var(--bg2);
			color: var(--fg);
		}
	}
}
