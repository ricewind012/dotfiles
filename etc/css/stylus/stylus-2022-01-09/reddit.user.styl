/* ==UserStyle==
@name           Reddit
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

svar(var) {
	s('var(--%s)', var);
}

clr(n) {
	color: s('var(--color%s)', n);
}

bgc(n1 =, n2 =) {
	background-color: s('var(--bg%s)', n1);
	color: s('var(--fg%s)', n2);
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: var(--border-width) solid svar(color);

	if (radius || !pos) {
		border-radius: var(--border-radius);
	}
}

box(w, h = w) {
	width: w;
	height: h;
}

pos(offset = 0) {
	left: offset;
	top: offset;
	right: offset;
	bottom: offset;
}

anim(e = \&, name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{e} {
			{name ? animation : transition}: name var(--trans-dur) func;
		}
	}
}

dropfade(e = \&) {
	anim(e, dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(i = null) {
	i = i ? !important : null;

	anim();

	&:focus {
		border-color: var(--hl) i;
		box-shadow: var(--shadow-ins) var(--hl) i;
		outline: none;
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px;
	color: transparent;

	if (content) {
		// Replace
		&::{pos} {
			content: content;
			letter-spacing: 0;
			color: svar(text-color);
		}
	} else {
		// Hide
		* {
			letter-spacing: 0;
			color: svar(text-color);
		}
	}
}

normalise-select(e = \&) {
	{e} {
		bgc(2);
		background-image:
			linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
			linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
			linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%);
		background-size: 20px 20px;
		background-repeat: no-repeat;
		background-position: right 4px;
		padding: 0 20px 0 var(--pad);
		brd();
		height: 28px;
		focus();
	}
}

normalise-button(e = \&) {
	{e} {
		background: none var(--bg2);
		color: var(--fg);
		padding: 0 calc(var(--pad) * 2);
		brd();
		height: 28px;
		cursor: pointer;
		focus();

		&:disabled {
			opacity: .5;
			pointer-events: none;
		}
	}
}

normalise-input(e = \&) {
	{e} {
		bgc(2);
		padding: 0 var(--pad);
		brd();
		height: 28px;
		focus();

		&::placeholder {
			color: var(--fg3);
		}
	}
}

normalise-checkbox(e = \&) {
	/label {
		display: flex;
		align-items: center;
		gap: 1ch;
	}

	{e} {
		appearance: none;
		background-color: var(--bg2);
		border: 1px solid var(--border);
		border-radius: calc(var(--border-radius) * .33);
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		margin: 0;
		position: relative;
		box(16px);
		focus();

		&::before, &::after {
			content: '';
			position: absolute;
			pos();
			background-color: var(--hl);
			transform-origin: 0 0;
		}

		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0);
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0);
		}
		&:indeterminate::before {
			transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25);
			transition-duration: 33.33333333ms;
		}

		&:checked {
			&::before {
				transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4);
				transition-duration: 33.33333333ms;
			}
			&::after {
				transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2);
				transition-delay: 33.33333333ms;
				anim();
			}
		}
	}
}

normalise-radio(e = \&) {
	{e} {
		appearance: none;
		background-color: var(--bg2);
		border: 1px solid var(--border);
		border-radius: 50%;
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		margin: 0;
		position: relative;
		box(16px);
		focus();

		&::before {
			content: '';
			position: absolute;
			pos(3px);
			border-radius: 50%;
			background-color: var(--hl);
			transition: transform var(--trans-dur) linear;
			transform: scale(0);
		}
		&:disabled::before {
			background-color: var(--fg3);
		}
		&:checked::before {
			transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5);
			transform: scale(1);
			anim();
		}
	}
}

// Website-specific functions
capitalise(e = \&) {
	{e}::first-letter {
		text-transform: capitalize;
	}
}

@-moz-document domain("old.reddit.com") {
	/* Variables */
	:root {
		--sidebar-width: 200px;
	}

	/* Remove elements */
	.comment .tagline .score, .comment .tagline .score-hidden, // Upvotes
	.footer-parent, .debuginfo,
	.linkflairlabel, .flair,
	.comments-page #header,
	.read-next-container,
	.comment .buttons,
	#sr-header-area, // Header top
//	.message-button,
	.awardings-bar,
	.report-button,
	#header-img,
//	.redditname,
	.linkinfo, // Sidebar post info

	// Not logged in
	.listing-page .side > .spacer:nth-child(6), .comments-page .side > .spacer:nth-child(7), // Moderator list
	#header-bottom-right, #login_login-main, .commentsignupbar,
	.subscribe-button, .submit,
	.give-gold-button, .share,
	.login-required,
	.midcol {
		display: none !important;
	}

	/* Global */
	body {
		bgc();
	}
	.content {
		margin: var(--body-pad);
		display: flex;
		flex-direction: column;
	}

	a {
		color: var(--fg-link);

		&:hover {
			text-decoration: underline;
		}
	}
	.gray {
		color: var(--fg2) !important;
	}

	/* Header */
	#header {
		background-color: var(--accent);
		brd(bottom, accent-border);
	}
	.pagename {
		font-variant: unset;
		margin-right: 1ch;
		vertical-align: unset;

		a {
			color: var(--fg);

			&::before {
				content: '/r/';
			}
		}
	}
	.tabmenu {
		margin-top: 3px;

		li {
			margin: 0;
			//display: inline-flex;

			&.selected a {
				bgc();
				border-color: var(--accent-border);
				border-bottom-color: var(--bg);
			}

			a {
				background-color: transparent;
				color: var(--fg2);
				//text-transform: capitalize;
				padding: calc(var(--pad) / 4) calc(var(--pad) / 2) 0 calc(var(--pad) / 2);
				//padding: var(--pad);

				&:hover {
					background-color: var(--accent-border);
					text-decoration: none;
				}
			}
		}
	}

	/* Content */
	.crosspost-preview {
		background-color: var(--bg);
		brd();
		margin-top: var(--pad);

		&-header {
			padding: var(--pad);
		}
		&-tagline {
			margin-top: calc(var(--pad) / 2);
		}

		.link &-content .self-divider {
			brd(top);
			margin: 0;
		}
	}
	.md {
		.link .usertext-body & {
			background-color: var(--bg2);
			padding: var(--pad) !important;
			brd();
		}

		// to move
		.thing .expando & {
			background-color: var(--bg);
			margin-bottom: 0;
		}

		blockquote {
			&, p { color: var(--color2) !important; }
			padding: 0;
			border: none;
			margin-left: 0;

			p {
				display: table-footer-group;

				&::before {
					content: '>';
				}
			}
		}

		code, pre {
			background-color: var(--bg2) !important;
			padding: var(--pad);
			brd();

			.expando & {
				background-color: var(--bg) !important;
				padding: 0;
				border: none;
			}
		}

		p {
			line-height: 1.3;
		}

		.linklisting &,
		.commentarea & {
			margin-top: var(--pad);
			margin-bottom: 0;
		}

		code {
			margin: 0 !important;
			padding: 0 var(--pad) !important;
		}

		&, * {
			color: var(--fg) !important;
		}
		a {
			color: var(--fg-link) !important;
		}
	}
	.title {
		.thing &, .thing &:visited {
			color: var(--hl);
		}

		&-button {
			normalise-button();
			margin-left: var(--pad);
			display: flex;
			align-items: center;

			&:hover {
				text-decoration: none;
			}
		}
	}
	.morecomments a {
		color: var(--fg-link);
		margin: 0;
		capitalise();
	}
	.tagline .stickied-tagline,
	.search-result-meta .stickied-tagline {
		color: var(--color2) !important;

		&::before { content: '(' !important; }
		&::after { content: ')'; }
	}

	/* Comments */
	.panestack-title,
	.commentarea .menuarea,
	.comment {
		margin: 0;
		padding: 0;
	}
	.panestack-title {
		border-bottom: none;
		position: absolute;
		left: calc(-4ch + var(--body-pad));
		height: 28px;
		display: flex;
		align-items: center;

		&::before {
			content: '';
			position: absolute;
			box(4ch, 100%);
			background-color: var(--bg);
		}
	}
	.commentarea .menuarea {
		color: var(--fg);
		margin-bottom: var(--pad);
		display: flex;
		justify-content: flex-end;

		.spacer {
			margin: 0;
		}
	}
	.panestack-title .title,
	.menuarea * {
		capitalise();
	}
	.comment {
		& &,
		& & & &,
		& & & & & &,
		& & & & & & & &,
		& & & & & & & & & & {
			background-color: var(--bg) !important;
		}
		& & & & & & & & &,
		& & & & & & &,
		& & & & &,
		& & & {
			background-color: var(--bg2) !important;
		}
		.expand {
			color: var(--fg2) !important;
			padding: 0;
			margin-right: 1ch;
		}
		.child, .showreplies {
			border-left: none;
			margin-left: 0;
			margin-top: var(--pad);

			&:empty {
				display: none;
			}
		}
		.listing & + :last-child {
			margin-bottom: calc(var(--pad) * -1) !important;
		}
		&.collapsed {
			padding-bottom: var(--pad);
			line-height: 1;
		}
		&.deleted em {
			color: var(--hl-error);
		}
	}
	.usertext {
		&.grayed &-body,
		&.border &-body {
			background-color: transparent;
			color: var(--fg);
			padding: 0;
		}
	}

	/* Posts */
	.thing {
		background-color: var(--bg2);
		padding: var(--pad);
		brd();
		margin-bottom: var(--pad);

		&.last-clicked {
			brd(, hl, false);
			box-shadow: var(--shadow-ins) var(--hl);
		}

		.title {
			margin: 0;
			a^[1..-1] { display: inline-block; }
		}

		&[data-type="morerecursion"] {
			margin-bottom: 0;
		}
	}
	.rank {
		color: var(--fg2) !important;
		margin-top: 0 !important;
		float: right !important;
	}
	.thumbnail {
		margin-right: var(--pad);
		margin-bottom: 0;
	}
	.author {
		color: var(--fg) !important;
		margin-right: 0 !important;
	}
	.entry {
		margin-left: 0;

		.buttons {
			li {
				padding-right: calc(var(--pad) / 2);
				margin-top: 2px;
				line-height: 1;
			}

			a {
				color: var(--fg2) !important;
				padding: 0 !important;
			}
		}
	}
	.stamp {
		line-height: 1;
		padding: 0 var(--pad);
		brd();
	}
	.expando {
		margin: 0;

		&-button {
			margin: 0;
			margin-top: 2px;
			margin-right: calc(var(--pad) / 2);
		}
	}
	.tagline {
		&,
		.comment.collapsed &,
		.comment.collapsed & a {
			color: var(--fg2);
		}
	}

	/* Domains */
	domains = {
		"i.redd.it": Image,
		"i.imgur.com": Image,
		"v.redd.it": Video,
		"github.com": GitHub,
	}
	.domain {
		vertical-align: top;
		color: var(--fg2)

		.thing[data-domain^="self"]:not([data-crosspost-root-subreddit]) & {
			display: none;
		}
		for k, v in domains {
			.thing[data-domain=\"{k}\"] & a {
				replace-text(s('"%s"', v), fg2);
			}
		}
		.thing[data-domain="reddit.com"] & a,
		.thing[data-url^="https://www.reddit.com/gallery"] & a {
			replace-text('Album', fg2);
		}
	}

	/* Dropdown */
	.commentarea .menuarea .dropdown span {
		normalise-select();
		text-decoration: none;
		box-sizing: border-box;
		cursor: pointer;
		display: inline-flex;
		align-items: center;
	}
	.drop-choices {
		background-color: var(--bg);
		brd();
		box-shadow: var(--shadow-big);
		margin-top: 6px !important;

		a {
			color: var(--fg);
			padding: var(--pad) !important;

			&:hover {
				background-color: var(--hl) !important;
				color: var(--hl-fg);
				text-decoration: none;
			}
		}
	}

	/* Sidebar */
	.side {
		background-color: var(--bg2);
		padding: var(--pad);
		margin: 0;
		margin-left: var(--body-pad);
		brd(left); brd(bottom);
		width: var(--sidebar-width);

		@media (max-width: 768px) {
			display: none;
		}

		.comments-page & {
			margin-top: calc(var(--body-pad) * -1);
		}

		.spacer:first-child {
			margin-top: 0;
		}
	}

	// Subreddit name, readers and online users in the same line
	.redditname,
	.users-online {
		display: initial;
	}
	.subscribers,
	.users-online .number {
		&::before {
			content: ' •\00a0'
		}
	}
	.subscribers .word,
	.users-online .word,
	.users-online::before {
		display: none;
	}

	#search {
		input[type="text"] {
			normalise-input();
			background-color: var(--bg) !important;
			width: 100%;

			&::placeholder {
				text-transform: capitalize;
			}
		}

		&expando {
			background-color: var(--bg);
			padding: var(--pad);
			brd();
			margin-top: var(--pad);

			input, p {
				margin-bottom: 0;
			}

			input[type="checkbox"] {
				normalise-checkbox();
				min-width: 16px;
			}
			label {
				display: flex;
				margin-bottom: calc(var(--pad) / 2);
			}
		}
	}
	.titlebox {
		:not(a), h1 a {
			color: var(--fg);
		}
		a {
			color: var(--fg-link);
		}

		.bottom {
			padding-top: 0;
			brd(top);
		}
	}

	/* Bottom buttons */
	.nav-buttons {
		padding-bottom: var(--pad);
		capitalise();
	}
	.nextprev, .nextsuggestions {
		color: var(--fg);

		a {
			normalise-button();
			display: inline-flex;
			align-items: center;
			focus(true);

			&:hover {
				background-color: var(--bg2);
				text-decoration: none;
				border-color: var(--border);
			}

			&[rel$="prev"] {
				replace-text('Previous');
				margin-right: var(--pad);
			}
			&[rel$="next"] {
				replace-text('Next');
			}
		}

		.separator {
			display: none;
		}
	}
}
