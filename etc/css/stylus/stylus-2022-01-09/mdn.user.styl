/* ==UserStyle==
@name           MDN
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) i;
}

fg(n =) {
	color: s('var(--fg%s)', n) i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl() {
	background-color: var(--hl) i;
	color: var(--hl-fg) i;
}

clr(n) {
	color: s('var(--color%s)', n) i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 i : pos == 0 ? 0 i : var(--pad) i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 i : pos == 0 ? 0 i : var(--pad) i;
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid svar(color) i;

	if (radius || !pos) {
		border-radius: var(--border-radius) i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) i;
}

// Position
box(w, h = w) {
	width: w i;
	height: h i;
}

pos(offset = 0) {
	left: offset i;
	top: offset i;
	right: offset i;
	bottom: offset i;
}

center() {
	display: flex i;
	align-items: center i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus() {
	anim();

	&:focus {
		border-color: var(--hl) i;
		box-shadow: var(--shadow-ins) var(--hl) i;
		outline: none i;
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px i;
	color: transparent i;

	if (content) { // Replace
		&::{pos} {
			content: content i;
			letter-spacing: 0 i;
			color: svar(text-color) i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 i;
			color: svar(text-color) i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none i;
	bgc(2)
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) i;
	background-size: 20px 20px i;
	background-repeat: no-repeat i;
	background-position: right 4px i;
	padding: 0 20px 0 var(--pad) i;
	brd();
	height: 28px i;
	focus();
}

normalise-input() {
	bgc(2);
	padding: 0 var(--pad) i;
	brd();
	height: 28px i;
	focus();

	&::placeholder {
		color: var(--fg3) i;
	}
}

normalise-button() {
	bgc(2);
	padding: 0 calc(var(--pad) * 2) i;
	brd();
	height: 28px i;
	cursor: pointer i;
	focus();

	&:disabled {
		opacity: .5 i;
		pointer-events: none i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box(16px);
	focus();

	&::-webkit-color-swatch {
		border: none i;
		border-radius: calc(var(--border-radius) * .33) i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox() {
	/label {
		center();
		gap: 1ch i;
	}

	appearance: none i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) i;
	mar(0);
	position: relative i;
	box(16px);
	focus();

	&::before, &::after {
		content: '';
		position: absolute i;
		pos();
		background-color: var(--hl) i;
		transform-origin: 0 0 i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) i;
		transition-duration: 33.33333333ms i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) i;
			transition-duration: 33.33333333ms i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) i;
			transition-delay: 33.33333333ms i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none i;
	bg(2);
	brd();
	border-radius: 50% i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) i;
	mar(0);
	position: relative i;
	box(16px);
	focus();

	&::before {
		content: '';
		position: absolute i;
		pos(3px);
		background-color: var(--hl) i;
		border-radius: 50% i;
		transition: transform var(--trans-dur) linear i;
		transform: scale(0) i;
	}
	&:disabled::before {
		background-color: var(--fg3) i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) i;
		transform: scale(1) i;
		anim();
	}
}

normalise-header() {
	text-transform: uppercase;
	letter-spacing: 0.4pt;
	padding-top: calc(var(--pad) * 3);
	padding-bottom: calc(var(--pad) * 1.5);
	brd(bottom);
	margin-bottom: calc(var(--pad) * 1.5);
}
@-moz-document domain("developer.mozilla.org") {
	/* Remove elements */
	.breadcrumb-locale-container,
	.document-toc-container,
	.main-page-content h1,
	#sidebar-quicklinks,
	#nav-footer,
	.main-nav,
	.metadata {
		display: none;
	}
	#content {
		grid-column: 1/3;
	}

	/* Global */
	body {
		bgc();
		letter-spacing: unset;
		line-height: 1.3;
	}
	a {
		color: var(--fg-link) !important;

		&:not(:hover) {
			text-decoration: none !important;
		}
		&:hover {
			text-decoration: underline !important;
		}

		&:active {
			background-color: unset !important;
		}
	}

	/* Main page */
	.standard-page {
		.page-header {
			bg();
			min-height: 100vh;

			&-main {
				margin: auto;
				mar(top, 0);
				display: block;
			}
		}
		.logo,
		.header-search {
			margin: auto;
		}
		.logo {
			mar(bottom, 0);
		}

		& > #content {
			display: none;
		}
	}

	/* Header */
	.page-header {
		background-color: var(--accent);
		pad();

		.document-page & {
			brd(bottom, accent-border);
			shd(mid);
		}

		/.header-search,
		&-main {
			background-color: unset;
		}

		.header-search {
			box(50%, initial);

			input.search-input-field {
				normalise-input();
			}

			.search-results {
				bg();
				brd();
				shd(big);
				dropfade();

				.result-item {
					pad();

					&:not(:last-child) {
						brd(bottom);
					}

					/ mark,
					&.highlight {
						hl();
					}
				}
			}
		}
	}
	.search {
		&-widget {
			mar(0);
			mar(top);
		}
		&-button {
			display: none;
		}
	}
	@media (prefers-color-scheme: dark) { .logo {
		filter: invert();
	}}

	/* Content */
	.main-content {
		margin-top: var(--body-pad);
	}
	.main-page-content {
		padding: 0 var(--pad) var(--pad);
		mar(bottom, 0);

		h2 {
			normalise-header();

			a {
				fg();

				&:hover {
					text-decoration: none !important;
				}
			}
		}
	}
	.page-content-container {
		pad(0);
	}

	p {
		mar(bottom);

		&:only-child {
			mar(0);
		}

		strong {
			text-transform: uppercase;
		}
	}

	table {
		brd();
		mar(bottom);

		th, td {
			bg(2);
			pad();
			brd(left);
			brd(bottom);
		}
	}

	.notecard {
		pad();
		brd();
		mar(bottom, 0);

		&.note {
			bg(2);
		}
	}

	.search-result {
		&s > * {
			margin: auto !important;
		}

		&-entry {
			bg(2);
			pad();
			brd();

			h3 {
				mar(bottom);
			}
			mark {
				font-style: normal;
			}

			p {
				mar(0);
			}
			.highlight,
			.summary {
				fg();
				font-style: normal;
			}
		}

		&-url {
			display: none;
		}
	}
	/* Code */
	code, pre {
		bg(2);
	}
	code {
		pad(0);
	}
	pre {
		pad();
		brd();
		mar(bottom, 0);
		line-height: 1;
	}
	.language-css .token.string,
	.style .token.string,
	.token.entity,
	.token.operator,
	.token.url {
		fg();
	}
	.token.cdata,
	.token.comment,
	.token.doctype,
	.token.prolog,
	.token.punctuation {
		fg(2);
	}
	.token.class-name,
	.token.function {
		clr(9);
	}
	.token.boolean,
	.token.constant,
	.token.deleted,
	.token.number,
	.token.property,
	.token.symbol,
	.token.tag {
		clr(10);
	}
	.token.attr-name,
	.token.builtin,
	.token.char,
	.token.inserted,
	.token.selector,
	.token.string {
		clr(12);
	}
	.token.atrule,
	.token.attr-value,
	.token.keyword {
		clr(13);
	}
}
