/* ==UserStyle==
@name           Reddit
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$small-screen = 768px
$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl() {
	background-color: var(--hl) $i;
	color: var(--hl-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid svar(color) $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2)
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: 0 20px 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();
}

normalise-input() {
	bgc(2);
	padding: 0 var(--pad) $i;
	brd();
	height: $input-h $i;
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	padding: 0 calc(var(--pad) * 2) $i;
	brd();
	height: $input-h $i;
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
	&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header() {
	fg();
	text-transform: uppercase $i;
	letter-spacing: 0.4pt $i;
	padding-top: calc(var(--pad) * 3) $i;
	padding-bottom: calc(var(--pad) * 1.5) $i;
	brd(bottom);
	margin-bottom: calc(var(--pad) * 1.5) $i;
}

// Website-specific functions
capitalise(e = \&) {
	{e}::first-letter {
		text-transform: capitalize;
	}
}

@-moz-document domain("old.reddit.com") {
	/* Variables */
	:root {
		--sidebar-width: 200px;
	}

	/* Remove elements */
	.comment .tagline .score, .comment .tagline .score-hidden, // Upvotes
	.footer-parent, .debuginfo,
	.linkflairlabel, .flair,
	.comments-page #header,
	.read-next-container,
	.comment .buttons,
	#sr-header-area, // Header top
//	.message-button,
	.awardings-bar,
	.report-button,
	#header-img,
//	.redditname,
	.linkinfo, // Sidebar post info

	// Not logged in
	#header-bottom-right, #login_login-main, .commentsignupbar,
	.subscribe-button, .submit,
	.give-gold-button, .share,
	.login-required,
	.midcol {
		display: none $i;
	}

	/* Global */
	body {
		bgc();
		line-height: var(--line-height);
	}
	.content {
		margin: var(--body-pad);
		display: flex;
		flex-direction: column;
	}

	a {
		color: var(--fg-link);

		&:hover {
			text-decoration: underline;
		}
	}
	.gray {
		fg(2);
	}

	p {
		line-height: var(--line-height) $i;
	}

	input[type="checkbox"] {
		normalise-checkbox();
	}

	/* Header */
	#header {
		background-color: var(--accent);
		brd(bottom, accent-border);

		&-bottom-left {
			center();
		}
	}
	.pagename {
		font-variant: unset;
		margin-right: 1ch;
		vertical-align: unset;

		a {
			fg();

			&::before {
				content: '/r/';
			}
		}
	}
	.tabmenu {
		mar(top, 0);

		li {
			margin: 0;
			display: inline-flex;
			position: relative;

			&.selected a {
				bgc();
				brd(,accent-border);
				border-bottom: none $i;

				&::after {
					content: '';
					position: absolute;
					left: 0;
					right: 0;
					bottom: calc(var(--border-width) * -1);
					height: var(--border-width);
					bg();
				}
			}

			a {
				background-color: transparent;
				fg(2);
				text-transform: capitalize;
				pad();

				&:hover {
					fg();
					text-decoration: none;
				}
			}
		}
	}

	/* Content */
	.crosspost-preview {
		bg();
		brd();
		mar(top);

		&-header {
			pad();
		}
		&-tagline {
			margin-top: calc(var(--pad) / 2);
		}

		.link &-content .self-divider {
			brd(top);
			margin: 0;
		}
	}
	.md {
		.link .usertext-body & {
			bg(2);
			pad();
			brd();
		}

		// to move
		.thing .expando & {
			bg();
			mar(bottom, 0);
		}

		blockquote {
			padding: 0;
			border: none;
			margin-left: 0;

			&, p {
				clr(2);
			}

			p {
				display: table-footer-group;

				&::before {
					content: '>';
				}
			}
		}

		& > code, & > pre {
			bg(2);
			pad();
			brd();

			.expando & {
				bg();
				pad();
				border: none;
			}
		}
		code {
			mar(0);
			padding: 0 var(--pad) $i;
		}

		.linklisting &,
		.commentarea & {
			mar(top);
			mar(bottom, 0);
		}

		&, * {
			fg();
			line-height: var(--line-height) $i;
		}
		a {
			color: var(--fg-link) $i;
		}
	}
	.title {
		.thing &, .thing &:visited {
			color: var(--hl);
		}

		&-button {
			normalise-button();
			mar(left);
			center();

			&:hover {
				text-decoration: none;
			}
		}
	}
	.morecomments a {
		color: var(--fg-link);
		mar(0);
		capitalise();
	}
	.tagline .stickied-tagline,
	.search-result-meta .stickied-tagline {
		clr(2);

		&::before { content: '(' $i; }
		&::after { content: ')'; }
	}

	/* Comments */
	.panestack-title,
	.commentarea .menuarea,
	.comment {
		mar(0);
		pad(0);
	}
	.panestack-title {
		border-bottom: none;
		position: absolute;
		left: calc(-4ch + var(--body-pad));
		height: $input-h;
		center();

		&::before {
			content: '';
			position: absolute;
			box(4ch, 100%);
			bg();
		}
	}
	.commentarea .menuarea {
		fg();
		mar(bottom);
		display: flex;
		justify-content: flex-end;

		.spacer {
			mar(0);
		}
	}
	.panestack-title .title,
	.menuarea * {
		capitalise();
	}
	.reddit-infobar,
	.infobar {
		background-color: color-a(3);
		pad();
		brd(,color11);
		mar(0);
		mar(bottom);

		&.with-icon {
			min-height: unset;

			&::before {
				display: none;
			}
		}

		p {
			mar(0);
		}
	}
	.comment {
		.expand {
			fg(2);
			pad(0);
			margin-right: 1ch;
		}
		.child, .showreplies {
			border-left: none;
			mar(left, 0);
			mar(top);

			&:empty {
				display: none;
			}
		}
		&.collapsed {
			pad(bottom);
			line-height: 1;
		}
		&.deleted em {
			color: var(--hl-error);
		}
	}
	.usertext {
		&.grayed &-body,
		&.border &-body {
			background-color: transparent;
			fg();
			pad(0);
		}
	}

	/* Posts */
	.thing {
		bg(2);
		pad();
		brd();
		mar(bottom);

		& &,
		& & & &,
		& & & & & &,
		& & & & & & & &,
		& & & & & & & & & & {
			bg();
		}
		& & & & & & & & &,
		& & & & & & &,
		& & & & &,
		& & & {
			bg(2);
		}

		&.last-clicked {
			brd(, hl, false);
			box-shadow: var(--shadow-ins) var(--hl);
		}

		.title {
			margin: 0;
			a^[1..-1] { display: inline-block; }
		}

		.child & + .clearleft:last-child {
			margin-top: calc(var(--pad) * -1);
		}
	}
	.deepthread {
		&::after {
			display: none;
		}

		a {
			color: var(--fg-link);
		}
	}
	.rank {
		fg(2);
		mar(top, 0);
		float: right $i;
	}
	.thumbnail {
		mar(right);
		mar(bottom, 0);
	}
	.author {
		fg();
		mar(right, 0);
	}
	.entry {
		mar(left, 0);

		.buttons {
			li {
				padding-right: calc(var(--pad) / 2);
				margin-top: 2px;
				line-height: 1;
			}

			a {
				fg(2);
				pad(0);
			}
		}
	}
	.stamp {
		line-height: 1;
		padding: 0 var(--pad);
		brd();
	}
	.expando {
		mar(0);

		&-button {
			mar(0);
			margin-top: 2px $i;
			margin-right: calc(var(--pad) / 2) $i;
		}
	}
	.tagline {
		&,
		.comment.collapsed &,
		.comment.collapsed & a {
			fg(2);
		}
	}

	/* Domains */
	domains = {
		"i.redd.it": Image,
		"i.imgur.com": Image,
		"v.redd.it": Video,
		"github.com": GitHub,
	}
	.domain {
		vertical-align: top;
		fg(2);

		.thing[data-domain^="self"]:not([data-crosspost-root-subreddit]) & {
			display: none;
		}
		for k, v in domains {
			.thing[data-domain=\"{k}\"] & a {
				replace-text(s('"%s"', v), fg2);
			}
		}
		.thing[data-domain="reddit.com"] & a,
		.thing[data-url^="https://www.reddit.com/gallery"] & a {
			replace-text('Album', fg2);
		}
	}

	/* Dropdown */
	.commentarea .menuarea .dropdown span {
		normalise-select();
		text-decoration: none;
		box-sizing: border-box;
		cursor: pointer;
		display: inline-flex;
		align-items: center;
	}
	.drop-choices {
		bg();
		brd();
		shd(big);
		margin-top: 6px $i;

		a {
			fg();
			pad();

			&:hover {
				background-color: var(--hl) $i;
				color: var(--hl-fg) $i;
				text-decoration: none;
			}
		}
	}

	/* Sidebar */
	.side {
		bg(2);
		pad();
		margin: 0;
		margin-left: var(--body-pad);
		brd(left);
		brd(bottom);
		width: var(--sidebar-width);

		@media (max-width: $small-screen) {
			display: none;
		}

		.comments-page & {
			margin-top: calc(var(--body-pad) * -1);
		}

		.spacer:first-child {
			mar(top, 0);
		}
	}

	// Subreddit name, readers and online users in the same line
	.redditname,
	.users-online {
		display: initial;
	}
	.subscribers,
	.users-online .number {
		&::before {
			content: ' •\00a0'
		}
	}
	.subscribers .word,
	.users-online .word,
	.users-online::before {
		display: none;
	}

	#search {
		input[type="text"] {
			normalise-input();
			bg();
			width: 100%;

			&::placeholder {
				text-transform: capitalize;
			}
		}

		&expando {
			bg();
			pad();
			brd();
			mar(top);

			input, p {
				mar(bottom, 0);
			}

			label {
				margin-bottom: calc(var(--pad) / 2);
			}
		}
	}
	.titlebox {
		:not(a), h1 a {
			fg();
		}
		a {
			color: var(--fg-link);
		}

		.bottom {
			padding-top: 0;
			brd(top);
		}
	}

	/* Bottom buttons */
	.nav-buttons {
		pad(bottom);
		capitalise();
	}
	.nextprev, .nextsuggestions {
		fg();

		a {
			normalise-button();
			display: inline-flex;
			align-items: center;

			&:hover {
				bg(2);
				text-decoration: none;
				border-color: var(--border);
			}

			&[rel$="prev"] {
				replace-text('Previous');
				mar(right);
			}
			&[rel$="next"] {
				replace-text('Next');
			}
		}

		.separator {
			display: none;
		}
	}
}
