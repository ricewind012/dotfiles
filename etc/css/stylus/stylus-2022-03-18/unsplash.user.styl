/* ==UserStyle==
@name           Unsplash
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

svar(var) {
	s('var(--%s)', var);
}

bg(n =) {
	background-color: s('var(--bg%s)', n);
}

fg(n =) {
	color: s('var(--fg%s)', n);
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

clr(n) {
	color: s('var(--color%s)', n);
}

pad(n = 1) {
	padding: n == 0 ? 0 : n is a 'unit' ? var(--pad) : s('calc(var(--pad) %s %s)', unquote(arguments[0]), arguments[1]);
}

brd(pos =, color = border, radius = false) {
	{pos ? s('border-%s', pos) : 'border'}: var(--border-width) solid svar(color);

	if (radius || !pos) {
		border-radius: var(--border-radius);
	}
}

box(w, h = w, i = false) {
	i = (i || h == true) ? !important : null;
	h = w == h ? w : h is a 'unit' ? h : w;

	width: w i;
	height: h i;
}

pos(offset = 0) {
	left: offset;
	top: offset;
	right: offset;
	bottom: offset;
}

anim(e = \&, name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{e} {
			{name ? animation : transition}: name var(--trans-dur) func;
		}
	}
}

dropfade(e = \&) {
	anim(e, dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(i = null) {
	i = i ? !important : null;

	anim();

	&:focus {
		border-color: var(--hl) i;
		box-shadow: var(--shadow-ins) var(--hl) i;
		outline: none;
	}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px;
	color: transparent;

	if (content) {
		// Replace
		&::{pos} {
			content: content;
			letter-spacing: 0;
			color: svar(text-color);
		}
	} else {
		// Hide
		* {
			letter-spacing: 0;
			color: svar(text-color);
		}
	}
}

normalise-select(e = \&) {
	{e} {
		appearance: none;
		bgc(2);
		background-image:
			linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
			linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
			linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%);
		background-size: 20px 20px;
		background-repeat: no-repeat;
		background-position: right 4px;
		padding: 0 20px 0 var(--pad);
		brd();
		height: 28px;
		focus();
	}
}

normalise-input(e = \&) {
	{e} {
		bgc(2);
		padding: 0 var(--pad);
		brd();
		height: 28px;
		focus();

		&::placeholder {
			color: var(--fg3);
		}
	}
}

normalise-button(e = \&) {
	{e} {
		background: none var(--bg2);
		color: var(--fg);
		padding: 0 calc(var(--pad) * 2);
		brd();
		height: 28px;
		cursor: pointer;
		focus();

		&:disabled {
			opacity: .5;
			pointer-events: none;
		}
	}
}

normalise-color(e = \&) {
	{e} {
		background-color: var(--bg2);
		padding: 0;
		brd();
		box(16px);
		focus();

		&::-webkit-color-swatch {
			border: none;
			border-radius: calc(var(--border-radius) * .33);

			&-wrapper {
				padding: 0;
			}
		}
	}
}

normalise-checkbox(e = \&) {
	/label {
		display: flex;
		align-items: center;
		gap: 1ch;
	}

	{e} {
		appearance: none;
		background-color: var(--bg2);
		brd();
		border-radius: calc(var(--border-radius) * .33);
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		margin: 0;
		position: relative;
		box(16px);
		focus();

		&::before, &::after {
			content: '';
			position: absolute;
			pos();
			background-color: var(--hl);
			transform-origin: 0 0;
		}

		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0);
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0);
		}
		&:indeterminate::before {
			transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25);
			transition-duration: 33.33333333ms;
		}

		&:checked {
			&::before {
				transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4);
				transition-duration: 33.33333333ms;
			}
			&::after {
				transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2);
				transition-delay: 33.33333333ms;
				anim();
			}
		}
	}
}

normalise-radio(e = \&) {
	{e} {
		appearance: none;
		background-color: var(--bg2);
		border: 1px solid var(--border);
		border-radius: 50%;
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		margin: 0;
		position: relative;
		box(16px);
		focus();

		&::before {
			content: '';
			position: absolute;
			pos(3px);
			border-radius: 50%;
			background-color: var(--hl);
			transition: transform var(--trans-dur) linear;
			transform: scale(0);
		}
		&:disabled::before {
			background-color: var(--fg3);
		}
		&:checked::before {
			transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5);
			transform: scale(1);
			anim();
		}
	}
}

@-moz-document domain("unsplash.com") {
	/* Remove elements */
	[data-test="client-side-hydration-complete"] > header + div:not([data-test]), // Sticky header
	[aria-label="Visual search form"] > div > :last-child, // "Or try one of the examples below..."
	header > nav > :not(:first-child):not(.hzGh7), // Everything but the logo/search

	a[rel="sponsored"],
	span._1jzuO.Gehj1, // Featured
	div[style^="--row-gutter"] > div, // Related collections
	[data-test="search-photos-route"] > :first-child, // "Browse premium images on iStock"
	[data-test="search-photos-route"] > [style="height: 72px;"], // ^

	[data-test="search-photos-route"] h2, // "Results for..."
//	[data-test="search-nav-link-users"], // User search
	[data-test="page-header-title"], // Page title

//	[data-test="homepage-search-form-form"], // Second search bar
	button[title="Clear"], // Clear input
	button[title="Clear"] + div, // ^

	#app > div[data-test] > footer, // Footer
	#app > div[data-test] > footer + div, // ^
	[data-test="search-photos-route"] + div // ^
	{
		display: none !important;
	}

	/* Global */
	body {
		bgc();
	}

	/* Header */
	#app > div > header {
		position: relative;

		/[data-test="search-route"] > div:first-child,
		& > nav {
			background-color: var(--accent);
		}

		& > nav > :first-child {
			margin-right: 20px;
		}

		svg {
			fill: var(--fg);
		}

		form {
			background-color: var(--bg);
			brd();
		}

		/#react-autowhatever-1 {
			background-color: var(--bg-tr);
			backdrop-filter: var(--popup-filter);
			padding: 0;
			row-gap: 0;
			brd();
			box-shadow: var(--shadow-big);

			& > div {
				padding: var(--pad);
			}

			li > div > div {
				normalise-button();

				div[style="width: 8px;"], svg {
					display: none;
				}
			}
		}

		* {
			color: var(--fg);
		}
		[aria-labelledby="unsplash-home"] + div > span:last-child,
		input::placeholder {
			color: var(--fg2);
		}
	}

	// Menu
	button + [role="menu"] > div > div > div {
		background-color: var(--bg-tr) !important;
		backdrop-filter: var(--popup-filter);
		brd();
		box-shadow: var(--shadow-big);

		div[style="height: 8px;"] {
			display: none;
		}

		[aria-label="Visual search form"] {
			& > div > div > div {
				border-color: var(--fg);
				border-radius: var(--border-radius);

				& > div > div[class] {
					border: none;
					height: unset;

					& > label {
						display: none;
					}

					input {
						normalise-input();
					}
				}
			}

			button > div > div:first-child {
				display: none;
			}
		}

		h4 {
			margin: auto;

			& + div {
				display: none;
			}
		}

		// IDK what is below
		[download] {
			color: var(--fg) !important;

			&:hover {
				background-color: var(--hl) !important;
				color: var(--hl-fg) !important;

				span {
					color: var(--hl-fg) !important;
				}
			}

			&, &:hover {
				transition: none !important;
			}

			span {
				color: var(--fg2) !important;
			}
		}

		[style^="border-bottom-color"] {
			border-bottom-color: var(--border) !important;
		}

		hr {
			background-color: var(--border) !important;
			margin: 0 !important;
		}
	}
	[id^="popover-search"] > div > div > div > div {
		padding: 0;

		li > a[href] {
			padding: var(--pad) 0;
			height: unset;
			transition: none;

			&:hover:not([aria-disabled="true"]) {
				background-color: var(--hl);
				color: var(--hl-fg);
			}

			& > div {
				margin: 0 calc(var(--pad) * 2);
			}
		}
	}

	[data-test="search-route"] > div:first-child {
		position: unset !important;

		& > div {
			box-shadow: inset 0 -1px var(--accent-border);
		}

		li > a {
			color: var(--fg);
			padding: 0 var(--pad);
			height: 32px;

			&:hover:not([aria-current]) {
				background-color: var(--accent-border);
			}

			svg {
				fill: var(--fg);
			}

			&[aria-current] {
				background-color: var(--bg);
				box-shadow: none;
				brd(,accent-border, false);
				border-bottom: none;
			}
		}

		button[aria-haspopup="true"] span {
			color: var(--fg);
		}
	}

	// Title
	[data-test="search-route"] > div:nth-child(2) {
		padding-top: 0 !important;
		padding-bottom: calc(var(--pad) * 2) !important;

		& > div {
			margin-top: calc(var(--pad) * 2) !important;
		}
	}
	.FBggh { // top
		border: none;
		border-radius: 0;
	//width: unset;

		& > a {
			normalise-button();
			display: flex;
			align-items: center;
		}
	}

	// Tags
	[data-test="page-header-title"] + div > div::after {
		background-image: linear-gradient(
			90deg,
			transparent 0,
			var(--bg) 90%
		);
	}
	[title="scroll list to the right"]:hover svg {
		fill: var(--fg);
	}
	.mkUrf > div {
		background-color: var(--bg2);
		brd();

		&:hover {
			border-color: var(--hl);

			~/ a, & a {
				color: var(--fg);
			}
		}
	}

	// Image
	#app figure {
		// Tags
		& > div > div + div a {
			normalise-button();
			margin-top: 1px;
		}

		// Buttons
		[itemprop="contentUrl"] + div button,
		[title="Download photo"] {
			normalise-button();
			height: unset !important;
		}
	}

	// Photo page
	[data-test="photos-route"] {
		& > :first-child > div > div {
			position: unset;
		}

		header {
			background-color: var(--accent);
			brd(bottom, accent-border);
			box-shadow: var(--shadow-mid);

			div:last-child {
				& > div:not(:last-child) button { // Like photo, add to collections
					display: none;
				}

				& > div:last-child { // Download
					& > div > a[download] {
						background-color: var(--color10);
						border-radius: var(--border-radius) 0 var(--border-radius) 0;

						& + div { // Divider
							display: none;
						}
					}
					/#popover-download-button {
						margin-left: -1px;
						height: unset !important;

						button {
							background-color: var(--color10);
							border-radius: 0 var(--border-radius) 0 var(--border-radius);
						}
					}
					& > div > a[download],
					/#popover-download-button button {
						border-color: var(--color2);
						anim('&, &:hover');

						&:hover {
							background-color: var(--color2);
						}
					}
				}
			}
		}
	}
}
